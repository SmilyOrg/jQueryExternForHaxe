(function () { "use strict";
var $estr = function() { return js.Boot.__string_rec(this,''); };
function $extend(from, fields) {
	function inherit() {}; inherit.prototype = from; var proto = new inherit();
	for (var name in fields) proto[name] = fields[name];
	return proto;
}
var EReg = function(r,opt) {
	opt = opt.split("u").join("");
	this.r = new RegExp(r,opt);
};
EReg.__name__ = ["EReg"];
EReg.prototype = {
	matched: function(n) {
		return this.r.m != null && n >= 0 && n < this.r.m.length?this.r.m[n]:(function($this) {
			var $r;
			throw "EReg::matched";
			return $r;
		}(this));
	}
	,match: function(s) {
		if(this.r.global) this.r.lastIndex = 0;
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,r: null
	,__class__: EReg
}
var HxOverrides = function() { }
HxOverrides.__name__ = ["HxOverrides"];
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) return undefined;
	return x;
}
HxOverrides.substr = function(s,pos,len) {
	if(pos != null && pos != 0 && len != null && len < 0) return "";
	if(len == null) len = s.length;
	if(pos < 0) {
		pos = s.length + pos;
		if(pos < 0) pos = 0;
	} else if(len < 0) len = s.length + len - pos;
	return s.substr(pos,len);
}
HxOverrides.remove = function(a,obj) {
	var i = 0;
	var l = a.length;
	while(i < l) {
		if(a[i] == obj) {
			a.splice(i,1);
			return true;
		}
		i++;
	}
	return false;
}
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
}
var Lambda = function() { }
Lambda.__name__ = ["Lambda"];
Lambda.has = function(it,elt) {
	var $it0 = $iterator(it)();
	while( $it0.hasNext() ) {
		var x = $it0.next();
		if(x == elt) return true;
	}
	return false;
}
Lambda.foreach = function(it,f) {
	var $it0 = $iterator(it)();
	while( $it0.hasNext() ) {
		var x = $it0.next();
		if(!f(x)) return false;
	}
	return true;
}
Lambda.fold = function(it,f,first) {
	var $it0 = $iterator(it)();
	while( $it0.hasNext() ) {
		var x = $it0.next();
		first = f(x,first);
	}
	return first;
}
Lambda.indexOf = function(it,v) {
	var i = 0;
	var $it0 = $iterator(it)();
	while( $it0.hasNext() ) {
		var v2 = $it0.next();
		if(v == v2) return i;
		i++;
	}
	return -1;
}
var List = function() {
	this.length = 0;
};
List.__name__ = ["List"];
List.prototype = {
	iterator: function() {
		return { h : this.h, hasNext : function() {
			return this.h != null;
		}, next : function() {
			if(this.h == null) return null;
			var x = this.h[0];
			this.h = this.h[1];
			return x;
		}};
	}
	,add: function(item) {
		var x = [item];
		if(this.h == null) this.h = x; else this.q[1] = x;
		this.q = x;
		this.length++;
	}
	,length: null
	,q: null
	,h: null
	,__class__: List
}
var Reflect = function() { }
Reflect.__name__ = ["Reflect"];
Reflect.field = function(o,field) {
	var v = null;
	try {
		v = o[field];
	} catch( e ) {
	}
	return v;
}
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && hasOwnProperty.call(o,f)) a.push(f);
		}
	}
	return a;
}
Reflect.isFunction = function(f) {
	return typeof(f) == "function" && !(f.__name__ || f.__ename__);
}
Reflect.compare = function(a,b) {
	return a == b?0:a > b?1:-1;
}
Reflect.copy = function(o) {
	var o2 = { };
	var _g = 0, _g1 = Reflect.fields(o);
	while(_g < _g1.length) {
		var f = _g1[_g];
		++_g;
		o2[f] = Reflect.field(o,f);
	}
	return o2;
}
var Std = function() { }
Std.__name__ = ["Std"];
Std.string = function(s) {
	return js.Boot.__string_rec(s,"");
}
var StringBuf = function() {
	this.b = "";
};
StringBuf.__name__ = ["StringBuf"];
StringBuf.prototype = {
	b: null
	,__class__: StringBuf
}
var StringTools = function() { }
StringTools.__name__ = ["StringTools"];
StringTools.htmlEscape = function(s,quotes) {
	s = s.split("&").join("&amp;").split("<").join("&lt;").split(">").join("&gt;");
	return quotes?s.split("\"").join("&quot;").split("'").join("&#039;"):s;
}
StringTools.startsWith = function(s,start) {
	return s.length >= start.length && HxOverrides.substr(s,0,start.length) == start;
}
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	return c > 8 && c < 14 || c == 32;
}
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) r++;
	if(r > 0) return HxOverrides.substr(s,r,l - r); else return s;
}
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) r++;
	if(r > 0) return HxOverrides.substr(s,0,l - r); else return s;
}
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
}
var haxe = {}
haxe.unit = {}
haxe.unit.TestCase = function() {
};
haxe.unit.TestCase.__name__ = ["haxe","unit","TestCase"];
haxe.unit.TestCase.prototype = {
	assertEquals: function(expected,actual,c) {
		this.currentTest.done = true;
		if(actual != expected) {
			this.currentTest.success = false;
			this.currentTest.error = "expected '" + Std.string(expected) + "' but was '" + Std.string(actual) + "'";
			this.currentTest.posInfos = c;
			throw this.currentTest;
		}
	}
	,assertFalse: function(b,c) {
		this.currentTest.done = true;
		if(b == true) {
			this.currentTest.success = false;
			this.currentTest.error = "expected false but was true";
			this.currentTest.posInfos = c;
			throw this.currentTest;
		}
	}
	,assertTrue: function(b,c) {
		this.currentTest.done = true;
		if(b == false) {
			this.currentTest.success = false;
			this.currentTest.error = "expected true but was false";
			this.currentTest.posInfos = c;
			throw this.currentTest;
		}
	}
	,print: function(v) {
		haxe.unit.TestRunner.print(v);
	}
	,tearDown: function() {
	}
	,setup: function() {
	}
	,currentTest: null
	,__class__: haxe.unit.TestCase
}
var Test = function() {
	haxe.unit.TestCase.call(this);
};
$hxExpose(Test, "Test");
Test.__name__ = ["Test"];
Test.main = function() {
	if(window.hasOwnProperty("phantom")) {
		var page = require('webpage').create();
		var checkResult = (function($this) {
			var $r;
			var checkResult1 = null;
			checkResult1 = function() {
				Test.result = page.evaluate(function() {
					return Test.result;
				});
				if(Test.result == null) haxe.Timer.delay(checkResult1,10); else {
					haxe.Log.trace(page.evaluate(function() {
						return Test.result.toString();
					}),{ fileName : "Test.hx", lineNumber : 40, className : "Test", methodName : "main"});
					phantom.exit(Test.result.success?0:1);
				}
			};
			$r = checkResult1;
			return $r;
		}(this));
		page.open("http://localhost:2000/test.html",function(status) {
			if(status != "success") phantom.exit(1); else checkResult();
		});
	} else new jQuery(function() {
		var runner = new haxe.unit.TestRunner();
		runner.add(new Test());
		runner.add(new TestCoreExternGenerator());
		runner.run();
		Test.result = runner.result;
	});
}
Test.__super__ = haxe.unit.TestCase;
Test.prototype = $extend(haxe.unit.TestCase.prototype,{
	test3: function() {
		var me = this;
		var d = new jQuery.Deferred().done(function() {
			me.assertTrue(true,{ fileName : "Test.hx", lineNumber : 25, className : "Test", methodName : "test3"});
		});
		d.resolve();
	}
	,test2: function() {
		var div = new jQuery("div#test2")[0];
		jQuery.data(div,"test",{ first : 16, last : "pizza!"});
		new jQuery("span:first").text(jQuery.data(div,"test").first);
		new jQuery("span:last").text(jQuery.data(div,"test").last);
		this.assertEquals("The values stored were 16 and pizza!",jQuery.trim(new jQuery(div).text()),{ fileName : "Test.hx", lineNumber : 20, className : "Test", methodName : "test2"});
	}
	,test1: function() {
		var body = new jQuery("body");
		body.addClass("myclass");
		this.assertTrue(body.hasClass("myclass"),{ fileName : "Test.hx", lineNumber : 11, className : "Test", methodName : "test1"});
		this.assertEquals(3.0,body.add("html").add("title").size(),{ fileName : "Test.hx", lineNumber : 12, className : "Test", methodName : "test1"});
	}
	,__class__: Test
});
var TestCoreExternGenerator = function() {
	haxe.unit.TestCase.call(this);
};
TestCoreExternGenerator.__name__ = ["TestCoreExternGenerator"];
TestCoreExternGenerator.__super__ = haxe.unit.TestCase;
TestCoreExternGenerator.prototype = $extend(haxe.unit.TestCase.prototype,{
	testCompareComplexTypeSorting: function() {
		var types = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TAnonymous([{ name : "a", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),null), pos : { file : "test/TestCoreExternGenerator.hx", min : 1365, max : 1371}}]),haxe.macro.ComplexType.TAnonymous([{ name : "a", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),null), pos : { file : "test/TestCoreExternGenerator.hx", min : 1395, max : 1401}},{ name : "b", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),null), pos : { file : "test/TestCoreExternGenerator.hx", min : 1402, max : 1408}}])];
		var sorted = types.slice();
		sorted.sort(CoreExternGenerator.compareComplexType);
		this.assertEquals("2,4,3,6,5,1,0",sorted.map((function(_e) {
			return function(v) {
				return Lambda.indexOf(_e,v);
			};
		})(types)).toString(),{ fileName : "TestCoreExternGenerator.hx", lineNumber : 36, className : "TestCoreExternGenerator", methodName : "testCompareComplexTypeSorting"});
		sorted.sort(function(a,b) {
			return -CoreExternGenerator.compareComplexType(a,b);
		});
		this.assertEquals("0,1,5,6,3,4,2",sorted.map((function(_e1) {
			return function(v) {
				return Lambda.indexOf(_e1,v);
			};
		})(types)).toString(),{ fileName : "TestCoreExternGenerator.hx", lineNumber : 42, className : "TestCoreExternGenerator", methodName : "testCompareComplexTypeSorting"});
	}
	,testCompareComplexType: function() {
		this.assertTrue(CoreExternGenerator.compareComplexType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})) > 0,{ fileName : "TestCoreExternGenerator.hx", lineNumber : 7, className : "TestCoreExternGenerator", methodName : "testCompareComplexType"});
		this.assertTrue(CoreExternGenerator.compareComplexType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})) > 0,{ fileName : "TestCoreExternGenerator.hx", lineNumber : 8, className : "TestCoreExternGenerator", methodName : "testCompareComplexType"});
		this.assertTrue(CoreExternGenerator.compareComplexType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []})) > 0,{ fileName : "TestCoreExternGenerator.hx", lineNumber : 9, className : "TestCoreExternGenerator", methodName : "testCompareComplexType"});
		this.assertTrue(CoreExternGenerator.compareComplexType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []})) > 0,{ fileName : "TestCoreExternGenerator.hx", lineNumber : 10, className : "TestCoreExternGenerator", methodName : "testCompareComplexType"});
		this.assertTrue(CoreExternGenerator.compareComplexType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})) > 0,{ fileName : "TestCoreExternGenerator.hx", lineNumber : 12, className : "TestCoreExternGenerator", methodName : "testCompareComplexType"});
		this.assertTrue(CoreExternGenerator.compareComplexType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})) > 0,{ fileName : "TestCoreExternGenerator.hx", lineNumber : 13, className : "TestCoreExternGenerator", methodName : "testCompareComplexType"});
		this.assertTrue(CoreExternGenerator.compareComplexType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []})) > 0,{ fileName : "TestCoreExternGenerator.hx", lineNumber : 14, className : "TestCoreExternGenerator", methodName : "testCompareComplexType"});
		this.assertTrue(CoreExternGenerator.compareComplexType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []})) > 0,{ fileName : "TestCoreExternGenerator.hx", lineNumber : 15, className : "TestCoreExternGenerator", methodName : "testCompareComplexType"});
		this.assertTrue(CoreExternGenerator.compareComplexType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}))]})) > 0,{ fileName : "TestCoreExternGenerator.hx", lineNumber : 17, className : "TestCoreExternGenerator", methodName : "testCompareComplexType"});
		this.assertTrue(CoreExternGenerator.compareComplexType(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []})) > 0,{ fileName : "TestCoreExternGenerator.hx", lineNumber : 19, className : "TestCoreExternGenerator", methodName : "testCompareComplexType"});
	}
	,__class__: TestCoreExternGenerator
});
var Type = function() { }
Type.__name__ = ["Type"];
Type.getClass = function(o) {
	if(o == null) return null;
	return o.__class__;
}
Type.getClassName = function(c) {
	var a = c.__name__;
	return a.join(".");
}
Type.getInstanceFields = function(c) {
	var a = [];
	for(var i in c.prototype) a.push(i);
	HxOverrides.remove(a,"__class__");
	HxOverrides.remove(a,"__properties__");
	return a;
}
var XmlType = { __ename__ : true, __constructs__ : [] }
var Xml = function() { }
Xml.__name__ = ["Xml"];
Xml.prototype = {
	toString: function() {
		if(this.nodeType == Xml.PCData) return StringTools.htmlEscape(this._nodeValue);
		if(this.nodeType == Xml.CData) return "<![CDATA[" + this._nodeValue + "]]>";
		if(this.nodeType == Xml.Comment) return "<!--" + this._nodeValue + "-->";
		if(this.nodeType == Xml.DocType) return "<!DOCTYPE " + this._nodeValue + ">";
		if(this.nodeType == Xml.ProcessingInstruction) return "<?" + this._nodeValue + "?>";
		var s = new StringBuf();
		if(this.nodeType == Xml.Element) {
			s.b += "<";
			s.b += Std.string(this._nodeName);
			var $it0 = this._attributes.keys();
			while( $it0.hasNext() ) {
				var k = $it0.next();
				s.b += " ";
				s.b += Std.string(k);
				s.b += "=\"";
				s.b += Std.string(this._attributes.get(k));
				s.b += "\"";
			}
			if(this._children.length == 0) {
				s.b += "/>";
				return s.b;
			}
			s.b += ">";
		}
		var $it1 = this.iterator();
		while( $it1.hasNext() ) {
			var x = $it1.next();
			s.b += Std.string(x.toString());
		}
		if(this.nodeType == Xml.Element) {
			s.b += "</";
			s.b += Std.string(this._nodeName);
			s.b += ">";
		}
		return s.b;
	}
	,elementsNamed: function(name) {
		if(this._children == null) throw "bad nodetype";
		return { cur : 0, x : this._children, hasNext : function() {
			var k = this.cur;
			var l = this.x.length;
			while(k < l) {
				var n = this.x[k];
				if(n.nodeType == Xml.Element && n._nodeName == name) break;
				k++;
			}
			this.cur = k;
			return k < l;
		}, next : function() {
			var k = this.cur;
			var l = this.x.length;
			while(k < l) {
				var n = this.x[k];
				k++;
				if(n.nodeType == Xml.Element && n._nodeName == name) {
					this.cur = k;
					return n;
				}
			}
			return null;
		}};
	}
	,iterator: function() {
		if(this._children == null) throw "bad nodetype";
		return { cur : 0, x : this._children, hasNext : function() {
			return this.cur < this.x.length;
		}, next : function() {
			return this.x[this.cur++];
		}};
	}
	,exists: function(att) {
		if(this.nodeType != Xml.Element) throw "bad nodeType";
		return this._attributes.exists(att);
	}
	,get: function(att) {
		if(this.nodeType != Xml.Element) throw "bad nodeType";
		return this._attributes.get(att);
	}
	,get_parent: function() {
		return this._parent;
	}
	,get_nodeName: function() {
		if(this.nodeType != Xml.Element) throw "bad nodeType";
		return this._nodeName;
	}
	,_parent: null
	,_children: null
	,_attributes: null
	,_nodeValue: null
	,_nodeName: null
	,nodeType: null
	,__class__: Xml
}
haxe.StackItem = { __ename__ : true, __constructs__ : ["CFunction","Module","FilePos","Method","Lambda"] }
haxe.StackItem.CFunction = ["CFunction",0];
haxe.StackItem.CFunction.toString = $estr;
haxe.StackItem.CFunction.__enum__ = haxe.StackItem;
haxe.StackItem.Module = function(m) { var $x = ["Module",1,m]; $x.__enum__ = haxe.StackItem; $x.toString = $estr; return $x; }
haxe.StackItem.FilePos = function(s,file,line) { var $x = ["FilePos",2,s,file,line]; $x.__enum__ = haxe.StackItem; $x.toString = $estr; return $x; }
haxe.StackItem.Method = function(classname,method) { var $x = ["Method",3,classname,method]; $x.__enum__ = haxe.StackItem; $x.toString = $estr; return $x; }
haxe.StackItem.Lambda = function(v) { var $x = ["Lambda",4,v]; $x.__enum__ = haxe.StackItem; $x.toString = $estr; return $x; }
haxe.CallStack = function() { }
haxe.CallStack.__name__ = ["haxe","CallStack"];
haxe.CallStack.exceptionStack = function() {
	return [];
}
haxe.CallStack.toString = function(stack) {
	var b = new StringBuf();
	var _g = 0;
	while(_g < stack.length) {
		var s = stack[_g];
		++_g;
		b.b += "\nCalled from ";
		haxe.CallStack.itemToString(b,s);
	}
	return b.b;
}
haxe.CallStack.itemToString = function(b,s) {
	var $e = (s);
	switch( $e[1] ) {
	case 0:
		b.b += "a C function";
		break;
	case 1:
		var s_eModule_0 = $e[2];
		b.b += "module ";
		b.b += Std.string(s_eModule_0);
		break;
	case 2:
		var s_eFilePos_2 = $e[4], s_eFilePos_1 = $e[3], s_eFilePos_0 = $e[2];
		if(s_eFilePos_0 != null) {
			haxe.CallStack.itemToString(b,s_eFilePos_0);
			b.b += " (";
		}
		b.b += Std.string(s_eFilePos_1);
		b.b += " line ";
		b.b += Std.string(s_eFilePos_2);
		if(s_eFilePos_0 != null) b.b += ")";
		break;
	case 3:
		var s_eMethod_1 = $e[3], s_eMethod_0 = $e[2];
		b.b += Std.string(s_eMethod_0);
		b.b += ".";
		b.b += Std.string(s_eMethod_1);
		break;
	case 4:
		var s_eLambda_0 = $e[2];
		b.b += "local function #";
		b.b += Std.string(s_eLambda_0);
		break;
	}
}
haxe.Log = function() { }
haxe.Log.__name__ = ["haxe","Log"];
haxe.Log.trace = function(v,infos) {
	js.Boot.__trace(v,infos);
}
haxe.Timer = function(time_ms) {
	var me = this;
	this.id = setInterval(function() {
		me.run();
	},time_ms);
};
haxe.Timer.__name__ = ["haxe","Timer"];
haxe.Timer.delay = function(f,time_ms) {
	var t = new haxe.Timer(time_ms);
	t.run = function() {
		t.stop();
		f();
	};
	return t;
}
haxe.Timer.prototype = {
	run: function() {
		haxe.Log.trace("run",{ fileName : "Timer.hx", lineNumber : 98, className : "haxe.Timer", methodName : "run"});
	}
	,stop: function() {
		if(this.id == null) return;
		clearInterval(this.id);
		this.id = null;
	}
	,id: null
	,__class__: haxe.Timer
}
haxe.ds = {}
haxe.ds.StringMap = function() {
	this.h = { };
};
haxe.ds.StringMap.__name__ = ["haxe","ds","StringMap"];
haxe.ds.StringMap.prototype = {
	toString: function() {
		var s = new StringBuf();
		s.b += "{";
		var it = this.keys();
		while( it.hasNext() ) {
			var i = it.next();
			s.b += Std.string(i);
			s.b += " => ";
			s.b += Std.string(Std.string(this.get(i)));
			if(it.hasNext()) s.b += ", ";
		}
		s.b += "}";
		return s.b;
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref["$" + i];
		}};
	}
	,keys: function() {
		var a = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) a.push(key.substr(1));
		}
		return HxOverrides.iter(a);
	}
	,remove: function(key) {
		key = "$" + key;
		if(!this.h.hasOwnProperty(key)) return false;
		delete(this.h[key]);
		return true;
	}
	,exists: function(key) {
		return this.h.hasOwnProperty("$" + key);
	}
	,get: function(key) {
		return this.h["$" + key];
	}
	,set: function(key,value) {
		this.h["$" + key] = value;
	}
	,h: null
	,__class__: haxe.ds.StringMap
}
haxe.macro = {}
haxe.macro.Constant = { __ename__ : true, __constructs__ : ["CInt","CFloat","CString","CIdent","CRegexp"] }
haxe.macro.Constant.CInt = function(v) { var $x = ["CInt",0,v]; $x.__enum__ = haxe.macro.Constant; $x.toString = $estr; return $x; }
haxe.macro.Constant.CFloat = function(f) { var $x = ["CFloat",1,f]; $x.__enum__ = haxe.macro.Constant; $x.toString = $estr; return $x; }
haxe.macro.Constant.CString = function(s) { var $x = ["CString",2,s]; $x.__enum__ = haxe.macro.Constant; $x.toString = $estr; return $x; }
haxe.macro.Constant.CIdent = function(s) { var $x = ["CIdent",3,s]; $x.__enum__ = haxe.macro.Constant; $x.toString = $estr; return $x; }
haxe.macro.Constant.CRegexp = function(r,opt) { var $x = ["CRegexp",4,r,opt]; $x.__enum__ = haxe.macro.Constant; $x.toString = $estr; return $x; }
haxe.macro.Binop = { __ename__ : true, __constructs__ : ["OpAdd","OpMult","OpDiv","OpSub","OpAssign","OpEq","OpNotEq","OpGt","OpGte","OpLt","OpLte","OpAnd","OpOr","OpXor","OpBoolAnd","OpBoolOr","OpShl","OpShr","OpUShr","OpMod","OpAssignOp","OpInterval","OpArrow"] }
haxe.macro.Binop.OpAdd = ["OpAdd",0];
haxe.macro.Binop.OpAdd.toString = $estr;
haxe.macro.Binop.OpAdd.__enum__ = haxe.macro.Binop;
haxe.macro.Binop.OpMult = ["OpMult",1];
haxe.macro.Binop.OpMult.toString = $estr;
haxe.macro.Binop.OpMult.__enum__ = haxe.macro.Binop;
haxe.macro.Binop.OpDiv = ["OpDiv",2];
haxe.macro.Binop.OpDiv.toString = $estr;
haxe.macro.Binop.OpDiv.__enum__ = haxe.macro.Binop;
haxe.macro.Binop.OpSub = ["OpSub",3];
haxe.macro.Binop.OpSub.toString = $estr;
haxe.macro.Binop.OpSub.__enum__ = haxe.macro.Binop;
haxe.macro.Binop.OpAssign = ["OpAssign",4];
haxe.macro.Binop.OpAssign.toString = $estr;
haxe.macro.Binop.OpAssign.__enum__ = haxe.macro.Binop;
haxe.macro.Binop.OpEq = ["OpEq",5];
haxe.macro.Binop.OpEq.toString = $estr;
haxe.macro.Binop.OpEq.__enum__ = haxe.macro.Binop;
haxe.macro.Binop.OpNotEq = ["OpNotEq",6];
haxe.macro.Binop.OpNotEq.toString = $estr;
haxe.macro.Binop.OpNotEq.__enum__ = haxe.macro.Binop;
haxe.macro.Binop.OpGt = ["OpGt",7];
haxe.macro.Binop.OpGt.toString = $estr;
haxe.macro.Binop.OpGt.__enum__ = haxe.macro.Binop;
haxe.macro.Binop.OpGte = ["OpGte",8];
haxe.macro.Binop.OpGte.toString = $estr;
haxe.macro.Binop.OpGte.__enum__ = haxe.macro.Binop;
haxe.macro.Binop.OpLt = ["OpLt",9];
haxe.macro.Binop.OpLt.toString = $estr;
haxe.macro.Binop.OpLt.__enum__ = haxe.macro.Binop;
haxe.macro.Binop.OpLte = ["OpLte",10];
haxe.macro.Binop.OpLte.toString = $estr;
haxe.macro.Binop.OpLte.__enum__ = haxe.macro.Binop;
haxe.macro.Binop.OpAnd = ["OpAnd",11];
haxe.macro.Binop.OpAnd.toString = $estr;
haxe.macro.Binop.OpAnd.__enum__ = haxe.macro.Binop;
haxe.macro.Binop.OpOr = ["OpOr",12];
haxe.macro.Binop.OpOr.toString = $estr;
haxe.macro.Binop.OpOr.__enum__ = haxe.macro.Binop;
haxe.macro.Binop.OpXor = ["OpXor",13];
haxe.macro.Binop.OpXor.toString = $estr;
haxe.macro.Binop.OpXor.__enum__ = haxe.macro.Binop;
haxe.macro.Binop.OpBoolAnd = ["OpBoolAnd",14];
haxe.macro.Binop.OpBoolAnd.toString = $estr;
haxe.macro.Binop.OpBoolAnd.__enum__ = haxe.macro.Binop;
haxe.macro.Binop.OpBoolOr = ["OpBoolOr",15];
haxe.macro.Binop.OpBoolOr.toString = $estr;
haxe.macro.Binop.OpBoolOr.__enum__ = haxe.macro.Binop;
haxe.macro.Binop.OpShl = ["OpShl",16];
haxe.macro.Binop.OpShl.toString = $estr;
haxe.macro.Binop.OpShl.__enum__ = haxe.macro.Binop;
haxe.macro.Binop.OpShr = ["OpShr",17];
haxe.macro.Binop.OpShr.toString = $estr;
haxe.macro.Binop.OpShr.__enum__ = haxe.macro.Binop;
haxe.macro.Binop.OpUShr = ["OpUShr",18];
haxe.macro.Binop.OpUShr.toString = $estr;
haxe.macro.Binop.OpUShr.__enum__ = haxe.macro.Binop;
haxe.macro.Binop.OpMod = ["OpMod",19];
haxe.macro.Binop.OpMod.toString = $estr;
haxe.macro.Binop.OpMod.__enum__ = haxe.macro.Binop;
haxe.macro.Binop.OpAssignOp = function(op) { var $x = ["OpAssignOp",20,op]; $x.__enum__ = haxe.macro.Binop; $x.toString = $estr; return $x; }
haxe.macro.Binop.OpInterval = ["OpInterval",21];
haxe.macro.Binop.OpInterval.toString = $estr;
haxe.macro.Binop.OpInterval.__enum__ = haxe.macro.Binop;
haxe.macro.Binop.OpArrow = ["OpArrow",22];
haxe.macro.Binop.OpArrow.toString = $estr;
haxe.macro.Binop.OpArrow.__enum__ = haxe.macro.Binop;
haxe.macro.Unop = { __ename__ : true, __constructs__ : ["OpIncrement","OpDecrement","OpNot","OpNeg","OpNegBits"] }
haxe.macro.Unop.OpIncrement = ["OpIncrement",0];
haxe.macro.Unop.OpIncrement.toString = $estr;
haxe.macro.Unop.OpIncrement.__enum__ = haxe.macro.Unop;
haxe.macro.Unop.OpDecrement = ["OpDecrement",1];
haxe.macro.Unop.OpDecrement.toString = $estr;
haxe.macro.Unop.OpDecrement.__enum__ = haxe.macro.Unop;
haxe.macro.Unop.OpNot = ["OpNot",2];
haxe.macro.Unop.OpNot.toString = $estr;
haxe.macro.Unop.OpNot.__enum__ = haxe.macro.Unop;
haxe.macro.Unop.OpNeg = ["OpNeg",3];
haxe.macro.Unop.OpNeg.toString = $estr;
haxe.macro.Unop.OpNeg.__enum__ = haxe.macro.Unop;
haxe.macro.Unop.OpNegBits = ["OpNegBits",4];
haxe.macro.Unop.OpNegBits.toString = $estr;
haxe.macro.Unop.OpNegBits.__enum__ = haxe.macro.Unop;
haxe.macro.ExprDef = { __ename__ : true, __constructs__ : ["EConst","EArray","EBinop","EField","EParenthesis","EObjectDecl","EArrayDecl","ECall","ENew","EUnop","EVars","EFunction","EBlock","EFor","EIn","EIf","EWhile","ESwitch","ETry","EReturn","EBreak","EContinue","EUntyped","EThrow","ECast","EDisplay","EDisplayNew","ETernary","ECheckType","EMeta"] }
haxe.macro.ExprDef.EConst = function(c) { var $x = ["EConst",0,c]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; }
haxe.macro.ExprDef.EArray = function(e1,e2) { var $x = ["EArray",1,e1,e2]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; }
haxe.macro.ExprDef.EBinop = function(op,e1,e2) { var $x = ["EBinop",2,op,e1,e2]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; }
haxe.macro.ExprDef.EField = function(e,field) { var $x = ["EField",3,e,field]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; }
haxe.macro.ExprDef.EParenthesis = function(e) { var $x = ["EParenthesis",4,e]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; }
haxe.macro.ExprDef.EObjectDecl = function(fields) { var $x = ["EObjectDecl",5,fields]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; }
haxe.macro.ExprDef.EArrayDecl = function(values) { var $x = ["EArrayDecl",6,values]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; }
haxe.macro.ExprDef.ECall = function(e,params) { var $x = ["ECall",7,e,params]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; }
haxe.macro.ExprDef.ENew = function(t,params) { var $x = ["ENew",8,t,params]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; }
haxe.macro.ExprDef.EUnop = function(op,postFix,e) { var $x = ["EUnop",9,op,postFix,e]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; }
haxe.macro.ExprDef.EVars = function(vars) { var $x = ["EVars",10,vars]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; }
haxe.macro.ExprDef.EFunction = function(name,f) { var $x = ["EFunction",11,name,f]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; }
haxe.macro.ExprDef.EBlock = function(exprs) { var $x = ["EBlock",12,exprs]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; }
haxe.macro.ExprDef.EFor = function(it,expr) { var $x = ["EFor",13,it,expr]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; }
haxe.macro.ExprDef.EIn = function(e1,e2) { var $x = ["EIn",14,e1,e2]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; }
haxe.macro.ExprDef.EIf = function(econd,eif,eelse) { var $x = ["EIf",15,econd,eif,eelse]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; }
haxe.macro.ExprDef.EWhile = function(econd,e,normalWhile) { var $x = ["EWhile",16,econd,e,normalWhile]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; }
haxe.macro.ExprDef.ESwitch = function(e,cases,edef) { var $x = ["ESwitch",17,e,cases,edef]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; }
haxe.macro.ExprDef.ETry = function(e,catches) { var $x = ["ETry",18,e,catches]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; }
haxe.macro.ExprDef.EReturn = function(e) { var $x = ["EReturn",19,e]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; }
haxe.macro.ExprDef.EBreak = ["EBreak",20];
haxe.macro.ExprDef.EBreak.toString = $estr;
haxe.macro.ExprDef.EBreak.__enum__ = haxe.macro.ExprDef;
haxe.macro.ExprDef.EContinue = ["EContinue",21];
haxe.macro.ExprDef.EContinue.toString = $estr;
haxe.macro.ExprDef.EContinue.__enum__ = haxe.macro.ExprDef;
haxe.macro.ExprDef.EUntyped = function(e) { var $x = ["EUntyped",22,e]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; }
haxe.macro.ExprDef.EThrow = function(e) { var $x = ["EThrow",23,e]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; }
haxe.macro.ExprDef.ECast = function(e,t) { var $x = ["ECast",24,e,t]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; }
haxe.macro.ExprDef.EDisplay = function(e,isCall) { var $x = ["EDisplay",25,e,isCall]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; }
haxe.macro.ExprDef.EDisplayNew = function(t) { var $x = ["EDisplayNew",26,t]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; }
haxe.macro.ExprDef.ETernary = function(econd,eif,eelse) { var $x = ["ETernary",27,econd,eif,eelse]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; }
haxe.macro.ExprDef.ECheckType = function(e,t) { var $x = ["ECheckType",28,e,t]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; }
haxe.macro.ExprDef.EMeta = function(s,e) { var $x = ["EMeta",29,s,e]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; }
haxe.macro.ComplexType = { __ename__ : true, __constructs__ : ["TPath","TFunction","TAnonymous","TParent","TExtend","TOptional"] }
haxe.macro.ComplexType.TPath = function(p) { var $x = ["TPath",0,p]; $x.__enum__ = haxe.macro.ComplexType; $x.toString = $estr; return $x; }
haxe.macro.ComplexType.TFunction = function(args,ret) { var $x = ["TFunction",1,args,ret]; $x.__enum__ = haxe.macro.ComplexType; $x.toString = $estr; return $x; }
haxe.macro.ComplexType.TAnonymous = function(fields) { var $x = ["TAnonymous",2,fields]; $x.__enum__ = haxe.macro.ComplexType; $x.toString = $estr; return $x; }
haxe.macro.ComplexType.TParent = function(t) { var $x = ["TParent",3,t]; $x.__enum__ = haxe.macro.ComplexType; $x.toString = $estr; return $x; }
haxe.macro.ComplexType.TExtend = function(p,fields) { var $x = ["TExtend",4,p,fields]; $x.__enum__ = haxe.macro.ComplexType; $x.toString = $estr; return $x; }
haxe.macro.ComplexType.TOptional = function(t) { var $x = ["TOptional",5,t]; $x.__enum__ = haxe.macro.ComplexType; $x.toString = $estr; return $x; }
haxe.macro.TypeParam = { __ename__ : true, __constructs__ : ["TPType","TPExpr"] }
haxe.macro.TypeParam.TPType = function(t) { var $x = ["TPType",0,t]; $x.__enum__ = haxe.macro.TypeParam; $x.toString = $estr; return $x; }
haxe.macro.TypeParam.TPExpr = function(e) { var $x = ["TPExpr",1,e]; $x.__enum__ = haxe.macro.TypeParam; $x.toString = $estr; return $x; }
haxe.macro.Access = { __ename__ : true, __constructs__ : ["APublic","APrivate","AStatic","AOverride","ADynamic","AInline","AMacro"] }
haxe.macro.Access.APublic = ["APublic",0];
haxe.macro.Access.APublic.toString = $estr;
haxe.macro.Access.APublic.__enum__ = haxe.macro.Access;
haxe.macro.Access.APrivate = ["APrivate",1];
haxe.macro.Access.APrivate.toString = $estr;
haxe.macro.Access.APrivate.__enum__ = haxe.macro.Access;
haxe.macro.Access.AStatic = ["AStatic",2];
haxe.macro.Access.AStatic.toString = $estr;
haxe.macro.Access.AStatic.__enum__ = haxe.macro.Access;
haxe.macro.Access.AOverride = ["AOverride",3];
haxe.macro.Access.AOverride.toString = $estr;
haxe.macro.Access.AOverride.__enum__ = haxe.macro.Access;
haxe.macro.Access.ADynamic = ["ADynamic",4];
haxe.macro.Access.ADynamic.toString = $estr;
haxe.macro.Access.ADynamic.__enum__ = haxe.macro.Access;
haxe.macro.Access.AInline = ["AInline",5];
haxe.macro.Access.AInline.toString = $estr;
haxe.macro.Access.AInline.__enum__ = haxe.macro.Access;
haxe.macro.Access.AMacro = ["AMacro",6];
haxe.macro.Access.AMacro.toString = $estr;
haxe.macro.Access.AMacro.__enum__ = haxe.macro.Access;
haxe.macro.FieldType = { __ename__ : true, __constructs__ : ["FVar","FFun","FProp"] }
haxe.macro.FieldType.FVar = function(t,e) { var $x = ["FVar",0,t,e]; $x.__enum__ = haxe.macro.FieldType; $x.toString = $estr; return $x; }
haxe.macro.FieldType.FFun = function(f) { var $x = ["FFun",1,f]; $x.__enum__ = haxe.macro.FieldType; $x.toString = $estr; return $x; }
haxe.macro.FieldType.FProp = function(get,set,t,e) { var $x = ["FProp",2,get,set,t,e]; $x.__enum__ = haxe.macro.FieldType; $x.toString = $estr; return $x; }
haxe.macro.TypeDefKind = { __ename__ : true, __constructs__ : ["TDEnum","TDStructure","TDClass","TDAlias","TDAbstract"] }
haxe.macro.TypeDefKind.TDEnum = ["TDEnum",0];
haxe.macro.TypeDefKind.TDEnum.toString = $estr;
haxe.macro.TypeDefKind.TDEnum.__enum__ = haxe.macro.TypeDefKind;
haxe.macro.TypeDefKind.TDStructure = ["TDStructure",1];
haxe.macro.TypeDefKind.TDStructure.toString = $estr;
haxe.macro.TypeDefKind.TDStructure.__enum__ = haxe.macro.TypeDefKind;
haxe.macro.TypeDefKind.TDClass = function(superClass,interfaces,isInterface) { var $x = ["TDClass",2,superClass,interfaces,isInterface]; $x.__enum__ = haxe.macro.TypeDefKind; $x.toString = $estr; return $x; }
haxe.macro.TypeDefKind.TDAlias = function(t) { var $x = ["TDAlias",3,t]; $x.__enum__ = haxe.macro.TypeDefKind; $x.toString = $estr; return $x; }
haxe.macro.TypeDefKind.TDAbstract = function(tthis,from,to) { var $x = ["TDAbstract",4,tthis,from,to]; $x.__enum__ = haxe.macro.TypeDefKind; $x.toString = $estr; return $x; }
haxe.unit.TestResult = function() {
	this.m_tests = new List();
	this.success = true;
};
haxe.unit.TestResult.__name__ = ["haxe","unit","TestResult"];
haxe.unit.TestResult.prototype = {
	toString: function() {
		var buf = new StringBuf();
		var failures = 0;
		var $it0 = this.m_tests.iterator();
		while( $it0.hasNext() ) {
			var test = $it0.next();
			if(test.success == false) {
				buf.b += "* ";
				buf.b += Std.string(test.classname);
				buf.b += "::";
				buf.b += Std.string(test.method);
				buf.b += "()";
				buf.b += "\n";
				buf.b += "ERR: ";
				if(test.posInfos != null) {
					buf.b += Std.string(test.posInfos.fileName);
					buf.b += ":";
					buf.b += Std.string(test.posInfos.lineNumber);
					buf.b += "(";
					buf.b += Std.string(test.posInfos.className);
					buf.b += ".";
					buf.b += Std.string(test.posInfos.methodName);
					buf.b += ") - ";
				}
				buf.b += Std.string(test.error);
				buf.b += "\n";
				if(test.backtrace != null) {
					buf.b += Std.string(test.backtrace);
					buf.b += "\n";
				}
				buf.b += "\n";
				failures++;
			}
		}
		buf.b += "\n";
		if(failures == 0) buf.b += "OK "; else buf.b += "FAILED ";
		buf.b += Std.string(this.m_tests.length);
		buf.b += " tests, ";
		buf.b += Std.string(failures);
		buf.b += " failed, ";
		buf.b += Std.string(this.m_tests.length - failures);
		buf.b += " success";
		buf.b += "\n";
		return buf.b;
	}
	,add: function(t) {
		this.m_tests.add(t);
		if(!t.success) this.success = false;
	}
	,success: null
	,m_tests: null
	,__class__: haxe.unit.TestResult
}
haxe.unit.TestRunner = function() {
	this.result = new haxe.unit.TestResult();
	this.cases = new List();
};
haxe.unit.TestRunner.__name__ = ["haxe","unit","TestRunner"];
haxe.unit.TestRunner.print = function(v) {
	var msg = StringTools.htmlEscape(js.Boot.__string_rec(v,"")).split("\n").join("<br/>");
	var d = document.getElementById("haxe:trace");
	if(d == null) alert("haxe:trace element not found"); else d.innerHTML += msg;
}
haxe.unit.TestRunner.customTrace = function(v,p) {
	haxe.unit.TestRunner.print(p.fileName + ":" + p.lineNumber + ": " + Std.string(v) + "\n");
}
haxe.unit.TestRunner.prototype = {
	runCase: function(t) {
		var old = haxe.Log.trace;
		haxe.Log.trace = haxe.unit.TestRunner.customTrace;
		var cl = Type.getClass(t);
		var fields = Type.getInstanceFields(cl);
		haxe.unit.TestRunner.print("Class: " + Type.getClassName(cl) + " ");
		var _g = 0;
		while(_g < fields.length) {
			var f = fields[_g];
			++_g;
			var fname = f;
			var field = Reflect.field(t,f);
			if(StringTools.startsWith(fname,"test") && Reflect.isFunction(field)) {
				t.currentTest = new haxe.unit.TestStatus();
				t.currentTest.classname = Type.getClassName(cl);
				t.currentTest.method = fname;
				t.setup();
				try {
					field.apply(t,new Array());
					if(t.currentTest.done) {
						t.currentTest.success = true;
						haxe.unit.TestRunner.print(".");
					} else {
						t.currentTest.success = false;
						t.currentTest.error = "(warning) no assert";
						haxe.unit.TestRunner.print("W");
					}
				} catch( $e0 ) {
					if( js.Boot.__instanceof($e0,haxe.unit.TestStatus) ) {
						var e = $e0;
						haxe.unit.TestRunner.print("F");
						t.currentTest.backtrace = haxe.CallStack.toString(haxe.CallStack.exceptionStack());
					} else {
					var e = $e0;
					haxe.unit.TestRunner.print("E");
					if(e.message != null) t.currentTest.error = "exception thrown : " + Std.string(e) + " [" + Std.string(e.message) + "]"; else t.currentTest.error = "exception thrown : " + Std.string(e);
					t.currentTest.backtrace = haxe.CallStack.toString(haxe.CallStack.exceptionStack());
					}
				}
				this.result.add(t.currentTest);
				t.tearDown();
			}
		}
		haxe.unit.TestRunner.print("\n");
		haxe.Log.trace = old;
	}
	,run: function() {
		this.result = new haxe.unit.TestResult();
		var $it0 = this.cases.iterator();
		while( $it0.hasNext() ) {
			var c = $it0.next();
			this.runCase(c);
		}
		haxe.unit.TestRunner.print(this.result.toString());
		return this.result.success;
	}
	,add: function(c) {
		this.cases.add(c);
	}
	,cases: null
	,result: null
	,__class__: haxe.unit.TestRunner
}
haxe.unit.TestStatus = function() {
	this.done = false;
	this.success = false;
};
haxe.unit.TestStatus.__name__ = ["haxe","unit","TestStatus"];
haxe.unit.TestStatus.prototype = {
	backtrace: null
	,posInfos: null
	,classname: null
	,method: null
	,error: null
	,success: null
	,done: null
	,__class__: haxe.unit.TestStatus
}
haxe.xml = {}
haxe.xml._Fast = {}
haxe.xml._Fast.NodeAccess = function(x) {
	this.__x = x;
};
haxe.xml._Fast.NodeAccess.__name__ = ["haxe","xml","_Fast","NodeAccess"];
haxe.xml._Fast.NodeAccess.prototype = {
	resolve: function(name) {
		var x = this.__x.elementsNamed(name).next();
		if(x == null) {
			var xname = this.__x.nodeType == Xml.Document?"Document":this.__x.get_nodeName();
			throw xname + " is missing element " + name;
		}
		return new haxe.xml.Fast(x);
	}
	,__x: null
	,__class__: haxe.xml._Fast.NodeAccess
}
haxe.xml._Fast.AttribAccess = function(x) {
	this.__x = x;
};
haxe.xml._Fast.AttribAccess.__name__ = ["haxe","xml","_Fast","AttribAccess"];
haxe.xml._Fast.AttribAccess.prototype = {
	resolve: function(name) {
		if(this.__x.nodeType == Xml.Document) throw "Cannot access document attribute " + name;
		var v = this.__x.get(name);
		if(v == null) throw this.__x.get_nodeName() + " is missing attribute " + name;
		return v;
	}
	,__x: null
	,__class__: haxe.xml._Fast.AttribAccess
}
haxe.xml._Fast.HasAttribAccess = function(x) {
	this.__x = x;
};
haxe.xml._Fast.HasAttribAccess.__name__ = ["haxe","xml","_Fast","HasAttribAccess"];
haxe.xml._Fast.HasAttribAccess.prototype = {
	resolve: function(name) {
		if(this.__x.nodeType == Xml.Document) throw "Cannot access document attribute " + name;
		return this.__x.exists(name);
	}
	,__x: null
	,__class__: haxe.xml._Fast.HasAttribAccess
}
haxe.xml._Fast.HasNodeAccess = function(x) {
	this.__x = x;
};
haxe.xml._Fast.HasNodeAccess.__name__ = ["haxe","xml","_Fast","HasNodeAccess"];
haxe.xml._Fast.HasNodeAccess.prototype = {
	resolve: function(name) {
		return this.__x.elementsNamed(name).hasNext();
	}
	,__x: null
	,__class__: haxe.xml._Fast.HasNodeAccess
}
haxe.xml._Fast.NodeListAccess = function(x) {
	this.__x = x;
};
haxe.xml._Fast.NodeListAccess.__name__ = ["haxe","xml","_Fast","NodeListAccess"];
haxe.xml._Fast.NodeListAccess.prototype = {
	resolve: function(name) {
		var l = new List();
		var $it0 = this.__x.elementsNamed(name);
		while( $it0.hasNext() ) {
			var x = $it0.next();
			l.add(new haxe.xml.Fast(x));
		}
		return l;
	}
	,__x: null
	,__class__: haxe.xml._Fast.NodeListAccess
}
haxe.xml.Fast = function(x) {
	if(x.nodeType != Xml.Document && x.nodeType != Xml.Element) throw "Invalid nodeType " + Std.string(x.nodeType);
	this.x = x;
	this.node = new haxe.xml._Fast.NodeAccess(x);
	this.nodes = new haxe.xml._Fast.NodeListAccess(x);
	this.att = new haxe.xml._Fast.AttribAccess(x);
	this.has = new haxe.xml._Fast.HasAttribAccess(x);
	this.hasNode = new haxe.xml._Fast.HasNodeAccess(x);
};
haxe.xml.Fast.__name__ = ["haxe","xml","Fast"];
haxe.xml.Fast.prototype = {
	get_innerHTML: function() {
		var s = new StringBuf();
		var $it0 = this.x.iterator();
		while( $it0.hasNext() ) {
			var x = $it0.next();
			s.b += Std.string(x.toString());
		}
		return s.b;
	}
	,get_name: function() {
		return this.x.nodeType == Xml.Document?"Document":this.x.get_nodeName();
	}
	,hasNode: null
	,has: null
	,att: null
	,nodes: null
	,node: null
	,x: null
	,__class__: haxe.xml.Fast
}
var CoreExternGenerator = function(apiXml) {
	this.api = new haxe.xml.Fast(apiXml).node.resolve("api");
};
CoreExternGenerator.__name__ = ["CoreExternGenerator"];
CoreExternGenerator.compareComplexType = function(a,b) {
	return (function($this) {
		var $r;
		var $e = (a);
		switch( $e[1] ) {
		case 0:
			var a_eTPath_0 = $e[2];
			$r = (function($this) {
				var $r;
				switch(a_eTPath_0.params.length) {
				case 0:
					$r = (function($this) {
						var $r;
						switch(a_eTPath_0.pack.length) {
						case 0:
							$r = (function($this) {
								var $r;
								switch(a_eTPath_0.name) {
								case "Dynamic":
									$r = (function($this) {
										var $r;
										var $e = (b);
										switch( $e[1] ) {
										case 0:
											var b_eTPath_0 = $e[2];
											$r = (function($this) {
												var $r;
												switch(b_eTPath_0.params.length) {
												case 0:
													$r = (function($this) {
														var $r;
														switch(b_eTPath_0.pack.length) {
														case 0:
															$r = (function($this) {
																var $r;
																switch(b_eTPath_0.name) {
																case "Dynamic":
																	$r = 0;
																	break;
																default:
																	$r = 1;
																}
																return $r;
															}($this));
															break;
														default:
															$r = 1;
														}
														return $r;
													}($this));
													break;
												default:
													$r = (function($this) {
														var $r;
														switch(b_eTPath_0.pack.length) {
														case 0:
															$r = (function($this) {
																var $r;
																switch(b_eTPath_0.name) {
																case "Dynamic":
																	$r = 1;
																	break;
																default:
																	$r = 1;
																}
																return $r;
															}($this));
															break;
														default:
															$r = 1;
														}
														return $r;
													}($this));
												}
												return $r;
											}($this));
											break;
										default:
											$r = 1;
										}
										return $r;
									}($this));
									break;
								case "Float":
									$r = (function($this) {
										var $r;
										var $e = (b);
										switch( $e[1] ) {
										case 0:
											var b_eTPath_0 = $e[2];
											$r = (function($this) {
												var $r;
												switch(b_eTPath_0.pack.length) {
												case 0:
													$r = (function($this) {
														var $r;
														switch(b_eTPath_0.name) {
														case "Dynamic":
															$r = -1;
															break;
														case "Int":
															$r = (function($this) {
																var $r;
																switch(b_eTPath_0.params.length) {
																case 0:
																	$r = 1;
																	break;
																default:
																	$r = a_eTPath_0.name == b_eTPath_0.name && a_eTPath_0.pack.join(".") == b_eTPath_0.pack.join(".")?(function($this) {
																		var $r;
																		var pdiff = a_eTPath_0.params.length - b_eTPath_0.params.length;
																		$r = pdiff != 0?pdiff:Reflect.compare(a_eTPath_0.name,b_eTPath_0.name);
																		return $r;
																	}($this)):1;
																}
																return $r;
															}($this));
															break;
														default:
															$r = a_eTPath_0.name == b_eTPath_0.name && a_eTPath_0.pack.join(".") == b_eTPath_0.pack.join(".")?(function($this) {
																var $r;
																var pdiff = a_eTPath_0.params.length - b_eTPath_0.params.length;
																$r = pdiff != 0?pdiff:Reflect.compare(a_eTPath_0.name,b_eTPath_0.name);
																return $r;
															}($this)):1;
														}
														return $r;
													}($this));
													break;
												default:
													$r = a_eTPath_0.name == b_eTPath_0.name && a_eTPath_0.pack.join(".") == b_eTPath_0.pack.join(".")?(function($this) {
														var $r;
														var pdiff = a_eTPath_0.params.length - b_eTPath_0.params.length;
														$r = pdiff != 0?pdiff:Reflect.compare(a_eTPath_0.name,b_eTPath_0.name);
														return $r;
													}($this)):1;
												}
												return $r;
											}($this));
											break;
										default:
											$r = -1;
										}
										return $r;
									}($this));
									break;
								case "Int":
									$r = (function($this) {
										var $r;
										var $e = (b);
										switch( $e[1] ) {
										case 0:
											var b_eTPath_0 = $e[2];
											$r = (function($this) {
												var $r;
												switch(b_eTPath_0.pack.length) {
												case 0:
													$r = (function($this) {
														var $r;
														switch(b_eTPath_0.name) {
														case "Dynamic":
															$r = -1;
															break;
														case "Float":
															$r = (function($this) {
																var $r;
																switch(b_eTPath_0.params.length) {
																case 0:
																	$r = -1;
																	break;
																default:
																	$r = a_eTPath_0.name == b_eTPath_0.name && a_eTPath_0.pack.join(".") == b_eTPath_0.pack.join(".")?(function($this) {
																		var $r;
																		var pdiff = a_eTPath_0.params.length - b_eTPath_0.params.length;
																		$r = pdiff != 0?pdiff:Reflect.compare(a_eTPath_0.name,b_eTPath_0.name);
																		return $r;
																	}($this)):1;
																}
																return $r;
															}($this));
															break;
														default:
															$r = a_eTPath_0.name == b_eTPath_0.name && a_eTPath_0.pack.join(".") == b_eTPath_0.pack.join(".")?(function($this) {
																var $r;
																var pdiff = a_eTPath_0.params.length - b_eTPath_0.params.length;
																$r = pdiff != 0?pdiff:Reflect.compare(a_eTPath_0.name,b_eTPath_0.name);
																return $r;
															}($this)):1;
														}
														return $r;
													}($this));
													break;
												default:
													$r = a_eTPath_0.name == b_eTPath_0.name && a_eTPath_0.pack.join(".") == b_eTPath_0.pack.join(".")?(function($this) {
														var $r;
														var pdiff = a_eTPath_0.params.length - b_eTPath_0.params.length;
														$r = pdiff != 0?pdiff:Reflect.compare(a_eTPath_0.name,b_eTPath_0.name);
														return $r;
													}($this)):1;
												}
												return $r;
											}($this));
											break;
										default:
											$r = -1;
										}
										return $r;
									}($this));
									break;
								default:
									$r = (function($this) {
										var $r;
										var $e = (b);
										switch( $e[1] ) {
										case 0:
											var b_eTPath_0 = $e[2];
											$r = (function($this) {
												var $r;
												switch(b_eTPath_0.pack.length) {
												case 0:
													$r = (function($this) {
														var $r;
														switch(b_eTPath_0.name) {
														case "Dynamic":
															$r = -1;
															break;
														default:
															$r = a_eTPath_0.name == b_eTPath_0.name && a_eTPath_0.pack.join(".") == b_eTPath_0.pack.join(".")?(function($this) {
																var $r;
																var pdiff = a_eTPath_0.params.length - b_eTPath_0.params.length;
																$r = pdiff != 0?pdiff:Reflect.compare(a_eTPath_0.name,b_eTPath_0.name);
																return $r;
															}($this)):1;
														}
														return $r;
													}($this));
													break;
												default:
													$r = a_eTPath_0.name == b_eTPath_0.name && a_eTPath_0.pack.join(".") == b_eTPath_0.pack.join(".")?(function($this) {
														var $r;
														var pdiff = a_eTPath_0.params.length - b_eTPath_0.params.length;
														$r = pdiff != 0?pdiff:Reflect.compare(a_eTPath_0.name,b_eTPath_0.name);
														return $r;
													}($this)):1;
												}
												return $r;
											}($this));
											break;
										default:
											$r = -1;
										}
										return $r;
									}($this));
								}
								return $r;
							}($this));
							break;
						default:
							$r = (function($this) {
								var $r;
								var $e = (b);
								switch( $e[1] ) {
								case 0:
									var b_eTPath_0 = $e[2];
									$r = (function($this) {
										var $r;
										switch(b_eTPath_0.pack.length) {
										case 0:
											$r = (function($this) {
												var $r;
												switch(b_eTPath_0.name) {
												case "Dynamic":
													$r = -1;
													break;
												default:
													$r = a_eTPath_0.name == b_eTPath_0.name && a_eTPath_0.pack.join(".") == b_eTPath_0.pack.join(".")?(function($this) {
														var $r;
														var pdiff = a_eTPath_0.params.length - b_eTPath_0.params.length;
														$r = pdiff != 0?pdiff:Reflect.compare(a_eTPath_0.name,b_eTPath_0.name);
														return $r;
													}($this)):1;
												}
												return $r;
											}($this));
											break;
										default:
											$r = a_eTPath_0.name == b_eTPath_0.name && a_eTPath_0.pack.join(".") == b_eTPath_0.pack.join(".")?(function($this) {
												var $r;
												var pdiff = a_eTPath_0.params.length - b_eTPath_0.params.length;
												$r = pdiff != 0?pdiff:Reflect.compare(a_eTPath_0.name,b_eTPath_0.name);
												return $r;
											}($this)):1;
										}
										return $r;
									}($this));
									break;
								default:
									$r = -1;
								}
								return $r;
							}($this));
						}
						return $r;
					}($this));
					break;
				case 1:
					$r = (function($this) {
						var $r;
						switch(a_eTPath_0.pack.length) {
						case 0:
							$r = (function($this) {
								var $r;
								switch(a_eTPath_0.name) {
								case "Dynamic":
									$r = (function($this) {
										var $r;
										var $e = (b);
										switch( $e[1] ) {
										case 0:
											var b_eTPath_0 = $e[2];
											$r = (function($this) {
												var $r;
												switch(b_eTPath_0.params.length) {
												case 0:
													$r = (function($this) {
														var $r;
														switch(b_eTPath_0.pack.length) {
														case 0:
															$r = (function($this) {
																var $r;
																switch(b_eTPath_0.name) {
																case "Dynamic":
																	$r = -1;
																	break;
																default:
																	$r = 1;
																}
																return $r;
															}($this));
															break;
														default:
															$r = 1;
														}
														return $r;
													}($this));
													break;
												case 1:
													$r = (function($this) {
														var $r;
														var $e = (b_eTPath_0.params[0]);
														switch( $e[1] ) {
														case 0:
															var b_eTPath_0_fparams_a0_eTPType_0 = $e[2];
															$r = (function($this) {
																var $r;
																switch(b_eTPath_0.pack.length) {
																case 0:
																	$r = (function($this) {
																		var $r;
																		switch(b_eTPath_0.name) {
																		case "Dynamic":
																			$r = (function($this) {
																				var $r;
																				var $e = (a_eTPath_0.params[0]);
																				switch( $e[1] ) {
																				case 0:
																					var a_eTPath_0_fparams_a0_eTPType_0 = $e[2];
																					$r = CoreExternGenerator.compareComplexType(a_eTPath_0_fparams_a0_eTPType_0,b_eTPath_0_fparams_a0_eTPType_0);
																					break;
																				default:
																					$r = 1;
																				}
																				return $r;
																			}($this));
																			break;
																		default:
																			$r = 1;
																		}
																		return $r;
																	}($this));
																	break;
																default:
																	$r = 1;
																}
																return $r;
															}($this));
															break;
														default:
															$r = 1;
														}
														return $r;
													}($this));
													break;
												default:
													$r = 1;
												}
												return $r;
											}($this));
											break;
										default:
											$r = 1;
										}
										return $r;
									}($this));
									break;
								default:
									$r = (function($this) {
										var $r;
										var $e = (b);
										switch( $e[1] ) {
										case 0:
											var b_eTPath_0 = $e[2];
											$r = (function($this) {
												var $r;
												switch(b_eTPath_0.pack.length) {
												case 0:
													$r = (function($this) {
														var $r;
														switch(b_eTPath_0.name) {
														case "Dynamic":
															$r = -1;
															break;
														default:
															$r = a_eTPath_0.name == b_eTPath_0.name && a_eTPath_0.pack.join(".") == b_eTPath_0.pack.join(".")?(function($this) {
																var $r;
																var pdiff = a_eTPath_0.params.length - b_eTPath_0.params.length;
																$r = pdiff != 0?pdiff:Reflect.compare(a_eTPath_0.name,b_eTPath_0.name);
																return $r;
															}($this)):1;
														}
														return $r;
													}($this));
													break;
												default:
													$r = a_eTPath_0.name == b_eTPath_0.name && a_eTPath_0.pack.join(".") == b_eTPath_0.pack.join(".")?(function($this) {
														var $r;
														var pdiff = a_eTPath_0.params.length - b_eTPath_0.params.length;
														$r = pdiff != 0?pdiff:Reflect.compare(a_eTPath_0.name,b_eTPath_0.name);
														return $r;
													}($this)):1;
												}
												return $r;
											}($this));
											break;
										default:
											$r = -1;
										}
										return $r;
									}($this));
								}
								return $r;
							}($this));
							break;
						default:
							$r = (function($this) {
								var $r;
								var $e = (b);
								switch( $e[1] ) {
								case 0:
									var b_eTPath_0 = $e[2];
									$r = (function($this) {
										var $r;
										switch(b_eTPath_0.pack.length) {
										case 0:
											$r = (function($this) {
												var $r;
												switch(b_eTPath_0.name) {
												case "Dynamic":
													$r = -1;
													break;
												default:
													$r = a_eTPath_0.name == b_eTPath_0.name && a_eTPath_0.pack.join(".") == b_eTPath_0.pack.join(".")?(function($this) {
														var $r;
														var pdiff = a_eTPath_0.params.length - b_eTPath_0.params.length;
														$r = pdiff != 0?pdiff:Reflect.compare(a_eTPath_0.name,b_eTPath_0.name);
														return $r;
													}($this)):1;
												}
												return $r;
											}($this));
											break;
										default:
											$r = a_eTPath_0.name == b_eTPath_0.name && a_eTPath_0.pack.join(".") == b_eTPath_0.pack.join(".")?(function($this) {
												var $r;
												var pdiff = a_eTPath_0.params.length - b_eTPath_0.params.length;
												$r = pdiff != 0?pdiff:Reflect.compare(a_eTPath_0.name,b_eTPath_0.name);
												return $r;
											}($this)):1;
										}
										return $r;
									}($this));
									break;
								default:
									$r = -1;
								}
								return $r;
							}($this));
						}
						return $r;
					}($this));
					break;
				default:
					$r = (function($this) {
						var $r;
						switch(a_eTPath_0.pack.length) {
						case 0:
							$r = (function($this) {
								var $r;
								switch(a_eTPath_0.name) {
								case "Dynamic":
									$r = (function($this) {
										var $r;
										var $e = (b);
										switch( $e[1] ) {
										case 0:
											var b_eTPath_0 = $e[2];
											$r = (function($this) {
												var $r;
												switch(b_eTPath_0.params.length) {
												case 0:
													$r = (function($this) {
														var $r;
														switch(b_eTPath_0.pack.length) {
														case 0:
															$r = (function($this) {
																var $r;
																switch(b_eTPath_0.name) {
																case "Dynamic":
																	$r = -1;
																	break;
																default:
																	$r = 1;
																}
																return $r;
															}($this));
															break;
														default:
															$r = 1;
														}
														return $r;
													}($this));
													break;
												default:
													$r = 1;
												}
												return $r;
											}($this));
											break;
										default:
											$r = 1;
										}
										return $r;
									}($this));
									break;
								default:
									$r = (function($this) {
										var $r;
										var $e = (b);
										switch( $e[1] ) {
										case 0:
											var b_eTPath_0 = $e[2];
											$r = (function($this) {
												var $r;
												switch(b_eTPath_0.pack.length) {
												case 0:
													$r = (function($this) {
														var $r;
														switch(b_eTPath_0.name) {
														case "Dynamic":
															$r = -1;
															break;
														default:
															$r = a_eTPath_0.name == b_eTPath_0.name && a_eTPath_0.pack.join(".") == b_eTPath_0.pack.join(".")?(function($this) {
																var $r;
																var pdiff = a_eTPath_0.params.length - b_eTPath_0.params.length;
																$r = pdiff != 0?pdiff:Reflect.compare(a_eTPath_0.name,b_eTPath_0.name);
																return $r;
															}($this)):1;
														}
														return $r;
													}($this));
													break;
												default:
													$r = a_eTPath_0.name == b_eTPath_0.name && a_eTPath_0.pack.join(".") == b_eTPath_0.pack.join(".")?(function($this) {
														var $r;
														var pdiff = a_eTPath_0.params.length - b_eTPath_0.params.length;
														$r = pdiff != 0?pdiff:Reflect.compare(a_eTPath_0.name,b_eTPath_0.name);
														return $r;
													}($this)):1;
												}
												return $r;
											}($this));
											break;
										default:
											$r = -1;
										}
										return $r;
									}($this));
								}
								return $r;
							}($this));
							break;
						default:
							$r = (function($this) {
								var $r;
								var $e = (b);
								switch( $e[1] ) {
								case 0:
									var b_eTPath_0 = $e[2];
									$r = (function($this) {
										var $r;
										switch(b_eTPath_0.pack.length) {
										case 0:
											$r = (function($this) {
												var $r;
												switch(b_eTPath_0.name) {
												case "Dynamic":
													$r = -1;
													break;
												default:
													$r = a_eTPath_0.name == b_eTPath_0.name && a_eTPath_0.pack.join(".") == b_eTPath_0.pack.join(".")?(function($this) {
														var $r;
														var pdiff = a_eTPath_0.params.length - b_eTPath_0.params.length;
														$r = pdiff != 0?pdiff:Reflect.compare(a_eTPath_0.name,b_eTPath_0.name);
														return $r;
													}($this)):1;
												}
												return $r;
											}($this));
											break;
										default:
											$r = a_eTPath_0.name == b_eTPath_0.name && a_eTPath_0.pack.join(".") == b_eTPath_0.pack.join(".")?(function($this) {
												var $r;
												var pdiff = a_eTPath_0.params.length - b_eTPath_0.params.length;
												$r = pdiff != 0?pdiff:Reflect.compare(a_eTPath_0.name,b_eTPath_0.name);
												return $r;
											}($this)):1;
										}
										return $r;
									}($this));
									break;
								default:
									$r = -1;
								}
								return $r;
							}($this));
						}
						return $r;
					}($this));
				}
				return $r;
			}($this));
			break;
		case 2:
			var a_eTAnonymous_0 = $e[2];
			$r = (function($this) {
				var $r;
				var $e = (b);
				switch( $e[1] ) {
				case 0:
					var b_eTPath_0 = $e[2];
					$r = (function($this) {
						var $r;
						switch(b_eTPath_0.pack.length) {
						case 0:
							$r = (function($this) {
								var $r;
								switch(b_eTPath_0.name) {
								case "Dynamic":
									$r = -1;
									break;
								default:
									$r = 1;
								}
								return $r;
							}($this));
							break;
						default:
							$r = 1;
						}
						return $r;
					}($this));
					break;
				case 2:
					var b_eTAnonymous_0 = $e[2];
					$r = b_eTAnonymous_0.length - a_eTAnonymous_0.length;
					break;
				default:
					$r = 0;
				}
				return $r;
			}($this));
			break;
		case 4:
			var a_eTExtend_1 = $e[3], a_eTExtend_0 = $e[2];
			$r = (function($this) {
				var $r;
				var $e = (b);
				switch( $e[1] ) {
				case 0:
					var b_eTPath_0 = $e[2];
					$r = (function($this) {
						var $r;
						switch(b_eTPath_0.pack.length) {
						case 0:
							$r = (function($this) {
								var $r;
								switch(b_eTPath_0.name) {
								case "Dynamic":
									$r = -1;
									break;
								default:
									$r = 1;
								}
								return $r;
							}($this));
							break;
						default:
							$r = 1;
						}
						return $r;
					}($this));
					break;
				case 4:
					var b_eTExtend_1 = $e[3];
					$r = b_eTExtend_1.length - a_eTExtend_1.length;
					break;
				default:
					$r = 0;
				}
				return $r;
			}($this));
			break;
		default:
			$r = (function($this) {
				var $r;
				var $e = (b);
				switch( $e[1] ) {
				case 0:
					var b_eTPath_0 = $e[2];
					$r = (function($this) {
						var $r;
						switch(b_eTPath_0.pack.length) {
						case 0:
							$r = (function($this) {
								var $r;
								switch(b_eTPath_0.name) {
								case "Dynamic":
									$r = -1;
									break;
								default:
									$r = 1;
								}
								return $r;
							}($this));
							break;
						default:
							$r = 1;
						}
						return $r;
					}($this));
					break;
				default:
					$r = 0;
				}
				return $r;
			}($this));
		}
		return $r;
	}(this));
}
CoreExternGenerator.compareFunctions = function(a,b) {
	if(a.args.length != b.args.length) return a.args.length - b.args.length; else {
		var _g1 = 0, _g = a.args.length;
		while(_g1 < _g) {
			var i = _g1++;
			var aArg = a.args[i], bArg = b.args[i];
			switch(aArg.opt) {
			case true:
				switch(bArg.opt) {
				case false:
					return 1;
				default:
					return CoreExternGenerator.compareComplexType(aArg.type,bArg.type);
				}
				break;
			case false:
				switch(bArg.opt) {
				case true:
					return -1;
				default:
					return CoreExternGenerator.compareComplexType(aArg.type,bArg.type);
				}
				break;
			}
		}
		return 0;
	}
}
CoreExternGenerator.compo = function(src,out,ind,indMap) {
	if(ind == null) ind = (function($this) {
		var $r;
		var _g = [];
		{
			var _g1 = 0;
			while(_g1 < src.length) {
				var i = src[_g1];
				++_g1;
				_g.push(0);
			}
		}
		$r = _g;
		return $r;
	}(this));
	if(indMap == null) indMap = new haxe.ds.StringMap();
	if(out == null) out = [];
	var indKey = ind.join(",");
	if(indMap.exists(indKey)) return out;
	out.push((function($this) {
		var $r;
		var _g1 = [];
		{
			var _g3 = 0, _g2 = ind.length;
			while(_g3 < _g2) {
				var i = _g3++;
				_g1.push(src[i][ind[i]]);
			}
		}
		$r = _g1;
		return $r;
	}(this)));
	indMap.set(indKey,null);
	var _g3 = 0, _g2 = ind.length;
	while(_g3 < _g2) {
		var i = _g3++;
		if(ind[i] + 1 < src[i].length) {
			var indNew = ind.slice();
			indNew[i]++;
			CoreExternGenerator.compo(src,out,indNew,indMap);
		}
	}
	return out;
}
CoreExternGenerator.prototype = {
	generate: function() {
		var _g5 = this;
		var out = [];
		var classEntryMap = new haxe.ds.StringMap();
		var $it0 = this.api.node.resolve("entries").nodes.resolve("entry").iterator();
		while( $it0.hasNext() ) {
			var entry = $it0.next();
			var name = (function($this) {
				var $r;
				var _g = entry.att.resolve("name");
				$r = (function($this) {
					var $r;
					switch(_g) {
					case "jQuery":
						$r = "new";
						break;
					default:
						$r = _g;
					}
					return $r;
				}($this));
				return $r;
			}(this));
			var names = name.split(".");
			var isJQueryStatic = StringTools.startsWith(name,"jQuery.");
			var owner = isJQueryStatic || names.length == 1?"jQuery":names[0];
			var _g1 = names.length - (isJQueryStatic || owner != "jQuery"?1:0);
			switch(_g1) {
			case 1:
				break;
			case 2:
				name = names[1];
				break;
			default:
				haxe.Log.trace(name,{ fileName : "CoreExternGenerator.hx", lineNumber : 373, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "generate"});
			}
			var _g2 = entry.att.resolve("type");
			switch(_g2) {
			case "method":case "property":
				break;
			case "selector":
				continue;
				break;
			default:
				throw "unknown entry type: " + entry.att.resolve("type");
				continue;
			}
			var entryMaps = classEntryMap.get(owner);
			if(entryMaps == null) {
				entryMaps = { statics : new haxe.ds.StringMap(), instances : new haxe.ds.StringMap()};
				classEntryMap.set(owner,entryMaps);
			}
			var entryMap = isJQueryStatic?entryMaps.statics:entryMaps.instances;
			if(entryMap.exists(name)) entryMap.get(name).push(entry); else entryMap.set(name,[entry]);
		}
		var jQuery1 = classEntryMap.get("jQuery");
		var jQueryStatic = { statics : jQuery1.statics, instances : new haxe.ds.StringMap()};
		classEntryMap.set("jQueryStatic",jQueryStatic);
		jQuery1.statics = new haxe.ds.StringMap();
		var $it1 = classEntryMap.keys();
		while( $it1.hasNext() ) {
			var clsName = $it1.next();
			var entryMaps = classEntryMap.get(clsName);
			var type = (function($this) {
				var $r;
				var types = $this.toComplexType(clsName);
				$r = types.length == 1?types[0]:(function($this) {
					var $r;
					throw clsName;
					return $r;
				}($this));
				return $r;
			}(this));
			var fields = [];
			if(!entryMaps.instances.exists("new")) {
				var ctrName = "jQuery." + clsName.charAt(0).toUpperCase() + clsName.substring(1);
				if(jQueryStatic.statics.exists(ctrName)) entryMaps.instances.set("new",jQueryStatic.statics.get(ctrName));
			}
			var _g = 0, _g1 = [true,false];
			while(_g < _g1.length) {
				var isStatic = _g1[_g];
				++_g;
				var entryMap = isStatic?entryMaps.statics:entryMaps.instances;
				var $it2 = entryMap.keys();
				while( $it2.hasNext() ) {
					var memName = $it2.next();
					switch(memName) {
					case "browser":
						continue;
						break;
					default:
					}
					var mem = entryMap.get(memName);
					var type1 = mem[0].att.resolve("type");
					var field = { name : memName.substring(memName.indexOf(".") + 1), doc : "", access : isStatic?[haxe.macro.Access.AStatic,haxe.macro.Access.APublic]:[haxe.macro.Access.APublic], kind : null, pos : null, meta : []};
					if(isStatic && entryMaps.instances.exists(field.name)) {
						var nativeName = field.name;
						field.name = "static" + nativeName.charAt(0).toUpperCase() + HxOverrides.substr(nativeName,1,null);
						field.meta.push({ name : ":native", params : [{ expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CString(nativeName)), pos : null}], pos : null});
					}
					switch(type1) {
					case "method":
						if(!Lambda.foreach(mem,(function() {
							return function(m) {
								return m.att.resolve("type") == "method";
							};
						})())) throw memName + "is of types: " + ((function($this) {
							var $r;
							var _g2 = [];
							{
								var _g3 = 0;
								while(_g3 < mem.length) {
									var m = mem[_g3];
									++_g3;
									_g2.push(m.att.resolve("type"));
								}
							}
							$r = _g2;
							return $r;
						}(this))).join(", ");
						var functions = [];
						switch(memName) {
						case "get":
							functions.push({ ret : haxe.macro.ComplexType.TPath({ params : [], pack : ["js","html"], name : "Node"}), params : [], expr : null, args : [{ value : null, opt : false, type : haxe.macro.ComplexType.TPath({ params : [], pack : [], name : "Int"}), name : "index"}]});
							functions.push({ ret : haxe.macro.ComplexType.TPath({ params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ params : [], pack : ["js","html"], name : "Node"}))], pack : [], name : "Array"}), params : [], expr : null, args : []});
							break;
						case "jQuery.makeArray":
							functions.push({ ret : haxe.macro.ComplexType.TPath({ params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ params : [], pack : [], name : "Dynamic"}))], pack : [], name : "Array"}), params : [], expr : null, args : [{ value : null, opt : false, type : haxe.macro.ComplexType.TPath({ params : [], pack : [], name : "Dynamic"}), name : "obj"}]});
							break;
						case "jQuery.inArray":
							functions.push({ ret : haxe.macro.ComplexType.TPath({ params : [], pack : [], name : "Int"}), params : [{ constraints : [], params : [], name : "T"}], expr : null, args : [{ value : null, opt : false, type : haxe.macro.ComplexType.TPath({ params : [], pack : [], name : "T"}), name : "value"},{ value : null, opt : false, type : haxe.macro.ComplexType.TPath({ params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ params : [], pack : [], name : "T"}))], pack : [], name : "Array"}), name : "array"},{ value : null, opt : true, type : haxe.macro.ComplexType.TPath({ params : [], pack : [], name : "Int"}), name : "fromIndex"}]});
							break;
						case "jQuery.map":
							functions.push({ ret : haxe.macro.ComplexType.TPath({ params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ params : [], pack : [], name : "T2"}))], pack : [], name : "Array"}), params : [{ constraints : [], params : [], name : "T"},{ constraints : [], params : [], name : "T2"}], expr : null, args : [{ value : null, opt : false, type : haxe.macro.ComplexType.TPath({ params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ params : [], pack : [], name : "T"}))], pack : [], name : "Array"}), name : "array"},{ value : null, opt : false, type : haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ params : [], pack : [], name : "T"}),haxe.macro.ComplexType.TPath({ params : [], pack : [], name : "Int"})],haxe.macro.ComplexType.TPath({ params : [], pack : [], name : "T2"})), name : "callback"}]});
							functions.push({ ret : haxe.macro.ComplexType.TPath({ params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ params : [], pack : [], name : "T2"}))], pack : [], name : "Array"}), params : [{ constraints : [], params : [], name : "T"},{ constraints : [], params : [], name : "T2"}], expr : null, args : [{ value : null, opt : false, type : haxe.macro.ComplexType.TPath({ params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ params : [], pack : [], name : "T"}))], pack : [], name : "Array"}), name : "array"},{ value : null, opt : false, type : haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ params : [], pack : [], name : "T"}),haxe.macro.ComplexType.TPath({ params : [], pack : [], name : "Int"})],haxe.macro.ComplexType.TPath({ params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ params : [], pack : [], name : "T2"}))], pack : [], name : "Array"})), name : "callback"}]});
							functions.push({ ret : haxe.macro.ComplexType.TPath({ params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ params : [], pack : [], name : "T2"}))], pack : [], name : "Array"}), params : [{ constraints : [], params : [], name : "T"},{ constraints : [], params : [], name : "T2"}], expr : null, args : [{ value : null, opt : false, type : haxe.macro.ComplexType.TPath({ params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ params : [], pack : [], name : "T"}))], pack : [], name : "Dynamic"}), name : "obj"},{ value : null, opt : false, type : haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ params : [], pack : [], name : "T"}),haxe.macro.ComplexType.TPath({ params : [], pack : [], name : "String"})],haxe.macro.ComplexType.TPath({ params : [], pack : [], name : "T2"})), name : "callback"}]});
							functions.push({ ret : haxe.macro.ComplexType.TPath({ params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ params : [], pack : [], name : "T2"}))], pack : [], name : "Array"}), params : [{ constraints : [], params : [], name : "T"},{ constraints : [], params : [], name : "T2"}], expr : null, args : [{ value : null, opt : false, type : haxe.macro.ComplexType.TPath({ params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ params : [], pack : [], name : "T"}))], pack : [], name : "Dynamic"}), name : "obj"},{ value : null, opt : false, type : haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ params : [], pack : [], name : "T"}),haxe.macro.ComplexType.TPath({ params : [], pack : [], name : "String"})],haxe.macro.ComplexType.TPath({ params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ params : [], pack : [], name : "T2"}))], pack : [], name : "Array"})), name : "callback"}]});
							break;
						case "jQuery.merge":
							functions.push({ ret : haxe.macro.ComplexType.TPath({ params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ params : [], pack : [], name : "T"}))], pack : [], name : "Array"}), params : [{ constraints : [], params : [], name : "T"}], expr : null, args : [{ value : null, opt : false, type : haxe.macro.ComplexType.TPath({ params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ params : [], pack : [], name : "T"}))], pack : [], name : "Array"}), name : "first"},{ value : null, opt : false, type : haxe.macro.ComplexType.TPath({ params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ params : [], pack : [], name : "T"}))], pack : [], name : "Array"}), name : "second"}]});
							break;
						case "jQuery.grep":
							functions.push({ ret : haxe.macro.ComplexType.TPath({ params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ params : [], pack : [], name : "T"}))], pack : [], name : "Array"}), params : [{ constraints : [], params : [], name : "T"}], expr : null, args : [{ value : null, opt : false, type : haxe.macro.ComplexType.TPath({ params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ params : [], pack : [], name : "T"}))], pack : [], name : "Array"}), name : "array"},{ value : null, opt : false, type : haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ params : [], pack : [], name : "T"}),haxe.macro.ComplexType.TPath({ params : [], pack : [], name : "Int"})],haxe.macro.ComplexType.TPath({ params : [], pack : [], name : "Bool"})), name : "funct"},{ value : null, opt : true, type : haxe.macro.ComplexType.TPath({ params : [], pack : [], name : "Bool"}), name : "invert"}]});
							break;
						default:
							var _g2 = 0;
							while(_g2 < mem.length) {
								var entry = mem[_g2];
								++_g2;
								var $it3 = entry.nodes.resolve("signature").iterator();
								while( $it3.hasNext() ) {
									var sig = $it3.next();
									var argss = (function($this) {
										var $r;
										var _g3 = [];
										var $it4 = sig.nodes.resolve("argument").iterator();
										while( $it4.hasNext() ) {
											var arg = $it4.next();
											var arg1 = [arg];
											_g3.push((function($this) {
												var $r;
												var _g4 = [];
												{
													var _g51 = 0, _g6 = arg1[0].has.resolve("type")?$this.toComplexType(arg1[0].att.resolve("type"),arg1[0]):arg1[0].hasNode.resolve("type")?Lambda.fold(arg1[0].nodes.resolve("type"),(function(arg1) {
														return function(t,a) {
															return a.concat(_g5.toComplexType(t.att.resolve("name"),arg1[0]));
														};
													})(arg1),[]):$this.toComplexType(null,arg1[0]);
													while(_g51 < _g6.length) {
														var type2 = _g6[_g51];
														++_g51;
														_g4.push({ name : (function($this) {
															var $r;
															var id = new EReg("(?:_*[a-z][_a-zA-Z0-9]*|_+[0-9][_a-zA-Z0-9]*|_*[A-Z][_a-zA-Z0-9]*|_+|\\$[_a-zA-Z0-9]+)","");
															id.match(arg1[0].att.resolve("name"));
															var name = id.matched(0);
															$r = Lambda.indexOf(CoreExternGenerator.keywords,name) != -1?"_" + name:name;
															return $r;
														}($this)), opt : arg1[0].has.resolve("optional") && (arg1[0].att.resolve("optional") == "true"?true:(function($this) {
															var $r;
															throw arg1[0].att.resolve("optional");
															return $r;
														}($this))), type : type2});
													}
												}
												$r = _g4;
												return $r;
											}($this)));
										}
										$r = _g3;
										return $r;
									}(this));
									var _g4 = 0, _g51 = CoreExternGenerator.compo(argss);
									while(_g4 < _g51.length) {
										var args = _g51[_g4];
										++_g4;
										functions.push({ args : args, ret : (function($this) {
											var $r;
											switch(memName) {
											case "new":
												$r = haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []});
												break;
											default:
												$r = (function($this) {
													var $r;
													var types = $this.toComplexType(entry.att.resolve("return"),entry);
													$r = types.length == 1?types[0]:haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []});
													return $r;
												}($this));
											}
											return $r;
										}(this)), expr : null, params : []});
									}
								}
							}
							switch(memName) {
							case "deferred.resolve":
								functions.push({ ret : haxe.macro.ComplexType.TPath({ params : [], pack : ["jQuery"], name : "Deferred"}), params : [], expr : null, args : []});
								break;
							default:
							}
						}
						functions.sort(CoreExternGenerator.compareFunctions);
						field.kind = haxe.macro.FieldType.FFun(functions.shift());
						var _g2 = 0;
						while(_g2 < functions.length) {
							var func = functions[_g2];
							++_g2;
							func.expr = { expr : haxe.macro.ExprDef.EBlock([]), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 18038, max : 18040}};
							field.meta.push({ name : ":overload", params : [{ expr : haxe.macro.ExprDef.EFunction(null,func), pos : null}], pos : null});
						}
						field.doc = ((function($this) {
							var $r;
							var _g2 = [];
							{
								var _g3 = 0;
								while(_g3 < mem.length) {
									var entry = mem[_g3];
									++_g3;
									_g2.push(entry.node.resolve("desc").get_innerHTML());
								}
							}
							$r = _g2;
							return $r;
						}(this))).join("\nOR: ");
						break;
					case "property":
						if(mem.length == 1) {
							var entry = mem[0];
							var types = (function($this) {
								var $r;
								switch(memName) {
								case "jQuery.browser":
									$r = [haxe.macro.ComplexType.TAnonymous([{ name : "webkit", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Null", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Bool", params : []}))]}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 18461, max : 18473}, meta : [{ name : ":optional", params : [], pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 18461, max : 18467}}]},{ name : "safari", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Null", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Bool", params : []}))]}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 18486, max : 18498}, meta : [{ name : ":optional", params : [], pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 18486, max : 18492}}]},{ name : "opera", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Null", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Bool", params : []}))]}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 18524, max : 18535}, meta : [{ name : ":optional", params : [], pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 18524, max : 18529}}]},{ name : "msie", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Null", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Bool", params : []}))]}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 18548, max : 18558}, meta : [{ name : ":optional", params : [], pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 18548, max : 18552}}]},{ name : "mozilla", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Null", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Bool", params : []}))]}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 18571, max : 18584}, meta : [{ name : ":optional", params : [], pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 18571, max : 18578}}]},{ name : "version", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 18596, max : 18622}}])];
									break;
								case "jQuery.support":
									$r = [haxe.macro.ComplexType.TAnonymous([{ name : "ajax", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Bool", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 18687, max : 18697}},{ name : "boxModel", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Bool", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 18709, max : 18723}},{ name : "changeBubbles", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Bool", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 18735, max : 18754}},{ name : "checkClone", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Bool", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 18766, max : 18782}},{ name : "checkOn", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Bool", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 18794, max : 18807}},{ name : "cors", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Bool", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 18819, max : 18829}},{ name : "cssFloat", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Bool", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 18841, max : 18855}},{ name : "hrefNormalized", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Bool", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 18867, max : 18887}},{ name : "htmlSerialize", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Bool", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 18899, max : 18918}},{ name : "leadingWhitespace", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Bool", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 18930, max : 18953}},{ name : "noCloneChecked", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Bool", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 18965, max : 18985}},{ name : "noCloneEvent", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Bool", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 18997, max : 19015}},{ name : "opacity", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Bool", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 19027, max : 19040}},{ name : "optDisabled", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Bool", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 19052, max : 19069}},{ name : "optSelected", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Bool", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 19081, max : 19098}},{ name : "scriptEval", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Bool", params : []})),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 19110, max : 19132}},{ name : "style", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Bool", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 19144, max : 19155}},{ name : "submitBubbles", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Bool", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 19167, max : 19186}},{ name : "tbody", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Bool", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 19198, max : 19209}}])];
									break;
								default:
									$r = $this.toComplexType(entry.att.resolve("return"),entry);
								}
								return $r;
							}(this));
							field.kind = haxe.macro.FieldType.FVar(types.length == 1?types[0]:haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),null);
							field.doc = entry.node.resolve("desc").get_innerHTML();
						} else {
							var entry = mem[0];
							switch(memName) {
							case "fx":
								var fields1 = [];
								var _g2 = 0;
								while(_g2 < mem.length) {
									var entry1 = mem[_g2];
									++_g2;
									var types = this.toComplexType(entry1.att.resolve("return"),entry1);
									var field1 = Reflect.copy(field);
									field1.name = entry1.att.resolve("name").split(".")[2];
									field1.kind = haxe.macro.FieldType.FVar(types.length == 1?types[0]:haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),null);
									field1.access = [];
									field1.doc = entry1.node.resolve("desc").get_innerHTML();
									fields1.push(field1);
								}
								field.kind = haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TAnonymous(fields1),null);
								break;
							default:
								haxe.Log.trace(memName,{ fileName : "CoreExternGenerator.hx", lineNumber : 640, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "generate"});
							}
						}
						break;
					default:
						throw "unknown entry type: " + type1;
						continue;
					}
					fields.push(field);
				}
			}
			var $e = (type);
			switch( $e[1] ) {
			case 0:
				var type_eTPath_0 = $e[2];
				var td = { pack : type_eTPath_0.pack, name : type_eTPath_0.name, pos : null, meta : [], params : [], isExtern : true, kind : haxe.macro.TypeDefKind.TDClass(), fields : fields};
				td.meta.push({ name : ":final", params : [], pos : null});
				switch(type_eTPath_0.name) {
				case "JQuery":
					td.meta.push({ name : ":native", params : [{ expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CString("jQuery")), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 20734, max : 20742}}], pos : null});
					td.meta.push({ name : ":build", params : [{ expr : haxe.macro.ExprDef.ECall({ expr : haxe.macro.ExprDef.EField({ expr : haxe.macro.ExprDef.EField({ expr : haxe.macro.ExprDef.EField({ expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("jQuery")), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 20903, max : 20909}},"haxe"), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 20903, max : 20914}},"Plugin"), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 20903, max : 20921}},"insert"), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 20903, max : 20928}},[]), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 20903, max : 20930}}], pos : null});
					td.kind = haxe.macro.TypeDefKind.TDClass(null,[{ pack : [], name : "ArrayAccess", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]}]);
					fields.push({ name : "_static", doc : "Compile-time short cut to JQueryStatic.", access : [haxe.macro.Access.AInline,haxe.macro.Access.AStatic,haxe.macro.Access.APublic], kind : haxe.macro.FieldType.FVar(null,{ expr : haxe.macro.ExprDef.EField({ expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("jQuery")), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 21296, max : 21302}},"JQueryStatic"), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 21296, max : 21315}}), pos : null, meta : []});
					break;
				case "JQueryStatic":
					td.meta.push({ name : ":native", params : [{ expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CString("jQuery")), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 21462, max : 21470}}], pos : null});
					td.meta.push({ name : ":build", params : [{ expr : haxe.macro.ExprDef.ECall({ expr : haxe.macro.ExprDef.EField({ expr : haxe.macro.ExprDef.EField({ expr : haxe.macro.ExprDef.EField({ expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("jQuery")), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 21631, max : 21637}},"haxe"), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 21631, max : 21642}},"Plugin"), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 21631, max : 21649}},"insert"), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 21631, max : 21656}},[]), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 21631, max : 21658}}], pos : null});
					break;
				default:
				}
				out.push(td);
				break;
			default:
				haxe.Log.trace(type,{ fileName : "CoreExternGenerator.hx", lineNumber : 721, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "generate"});
			}
		}
		return out;
	}
	,toComplexType: function(type,tag) {
		var tagStr = tag == null?"":StringTools.ltrim(tag.x.toString());
		var tagName = tag == null?"":tag.att.resolve("name");
		var entryName = tag == null?"":(function($this) {
			var $r;
			var _g = tag.get_name();
			$r = (function($this) {
				var $r;
				switch(_g) {
				case "entry":
					$r = tagName;
					break;
				case "argument":
					$r = new haxe.xml.Fast(tag.x.get_parent().get_parent()).att.resolve("name");
					break;
				default:
					$r = (function($this) {
						var $r;
						haxe.Log.trace(tag.get_name(),{ fileName : "CoreExternGenerator.hx", lineNumber : 30, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
						$r = "";
						return $r;
					}($this));
				}
				return $r;
			}($this));
			return $r;
		}(this));
		if(type != null) type = StringTools.trim(type);
		var simple = type == null?[haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})]:(function($this) {
			var $r;
			switch(type) {
			case "jQueryStatic":
				$r = [haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQueryStatic", params : []})];
				break;
			case "jQuery":case "jQuery object":
				$r = [haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []})];
				break;
			case "event":case "Event":
				$r = [haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})];
				break;
			case "callbacks":case "Callbacks":
				$r = [haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Callbacks", params : []})];
				break;
			case "jQuery.deferred":case "Deferred":case "deferred":
				$r = [haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Deferred", params : []})];
				break;
			case "Promise":
				$r = [haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Promise", params : []})];
				break;
			case "jqXHR":
				$r = [haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})];
				break;
			case "Selector":case "selector":
				$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})];
				break;
			case "htmlString":case "HTML":
				$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})];
				break;
			case "document":case "XMLDocument":
				$r = [haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Document", params : []})];
				break;
			case "Element":
				$r = [haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []})];
				break;
			case "Boolean":case "boolean":
				$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Bool", params : []})];
				break;
			case "Number":
				$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []})];
				break;
			case "Integer":
				$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []})];
				break;
			case "String":
				$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})];
				break;
			case "Anything":
				$r = !Lambda.has(["offset","position"],entryName) && !Lambda.has(["jQuery object"],tagName)?[haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})]:type.indexOf(",") >= 0?Lambda.fold(type.split(",").map((function(f,a2) {
					return function(a1) {
						return f(a1,a2);
					};
				})($bind($this,$this.toComplexType),tag)),function(ts,all) {
					return all.concat(ts);
				},[]):null;
				break;
			case "Object":
				$r = !Lambda.has(["offset","position"],entryName) && !Lambda.has(["jQuery object"],tagName)?[haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})]:type.indexOf(",") >= 0?Lambda.fold(type.split(",").map((function(f,a2) {
					return function(a1) {
						return f(a1,a2);
					};
				})($bind($this,$this.toComplexType),tag)),function(ts,all) {
					return all.concat(ts);
				},[]):null;
				break;
			case "PlainObject":
				$r = !Lambda.has(["offset","position"],entryName) && !Lambda.has(["jQuery object"],tagName)?[haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})]:type.indexOf(",") >= 0?Lambda.fold(type.split(",").map((function(f,a2) {
					return function(a1) {
						return f(a1,a2);
					};
				})($bind($this,$this.toComplexType),tag)),function(ts,all) {
					return all.concat(ts);
				},[]):null;
				break;
			case "undefined":case "":
				$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})];
				break;
			default:
				$r = type.indexOf(",") >= 0?Lambda.fold(type.split(",").map((function(f,a2) {
					return function(a1) {
						return f(a1,a2);
					};
				})($bind($this,$this.toComplexType),tag)),function(ts,all) {
					return all.concat(ts);
				},[]):null;
			}
			return $r;
		}(this));
		return simple != null?simple:(function($this) {
			var $r;
			switch(entryName) {
			case "jQuery.each":
				$r = (function($this) {
					var $r;
					switch(tagName) {
					case "callback(indexInArray, valueOfElement)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "content":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "NodeList", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "jQuery object":
						$r = [haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []})];
						break;
					case "complete":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callback()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "alwaysCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerIn(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerInOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, text)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, html)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, oldhtml)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, class)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, currentClass)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(options, originalOptions, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "success(data, textStatus, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "complete(responseText, textStatus, XMLHttpRequest)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(event, XMLHttpRequest, ajaxOptions)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					default:
						$r = (function($this) {
							var $r;
							haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
							$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
							return $r;
						}($this));
					}
					return $r;
				}($this));
				break;
			case "jQuery.getScript":
				$r = (function($this) {
					var $r;
					switch(tagName) {
					case "success(script, textStatus, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "content":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "NodeList", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "jQuery object":
						$r = [haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []})];
						break;
					case "complete":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callback()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "alwaysCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerIn(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerInOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, text)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, html)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, oldhtml)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, class)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, currentClass)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(options, originalOptions, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "success(data, textStatus, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "complete(responseText, textStatus, XMLHttpRequest)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(event, XMLHttpRequest, ajaxOptions)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					default:
						$r = (function($this) {
							var $r;
							haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
							$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
							return $r;
						}($this));
					}
					return $r;
				}($this));
				break;
			case "jQuery.parseHTML":
				$r = (function($this) {
					var $r;
					switch(tagName) {
					case "jQuery.parseHTML":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "content":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "NodeList", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "jQuery object":
						$r = [haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []})];
						break;
					case "complete":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callback()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "alwaysCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerIn(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerInOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, text)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, html)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, oldhtml)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, class)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, currentClass)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(options, originalOptions, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "success(data, textStatus, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "complete(responseText, textStatus, XMLHttpRequest)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(event, XMLHttpRequest, ajaxOptions)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					default:
						$r = (function($this) {
							var $r;
							haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
							$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
							return $r;
						}($this));
					}
					return $r;
				}($this));
				break;
			case "add":
				$r = (function($this) {
					var $r;
					switch(tagName) {
					case "elements":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Elements":
								$r = [haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "NodeList", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "content":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "NodeList", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "jQuery object":
						$r = [haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []})];
						break;
					case "complete":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callback()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "alwaysCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerIn(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerInOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, text)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, html)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, oldhtml)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, class)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, currentClass)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(options, originalOptions, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "success(data, textStatus, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "complete(responseText, textStatus, XMLHttpRequest)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(event, XMLHttpRequest, ajaxOptions)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					default:
						$r = (function($this) {
							var $r;
							haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
							$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
							return $r;
						}($this));
					}
					return $r;
				}($this));
				break;
			case "attr":
				$r = (function($this) {
					var $r;
					switch(tagName) {
					case "function(index, attr)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "content":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "NodeList", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "jQuery object":
						$r = [haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []})];
						break;
					case "complete":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callback()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "alwaysCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerIn(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerInOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, text)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, html)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, oldhtml)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, class)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, currentClass)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(options, originalOptions, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "success(data, textStatus, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "complete(responseText, textStatus, XMLHttpRequest)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(event, XMLHttpRequest, ajaxOptions)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					default:
						$r = (function($this) {
							var $r;
							haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
							$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
							return $r;
						}($this));
					}
					return $r;
				}($this));
				break;
			case "before":
				$r = (function($this) {
					var $r;
					switch(tagName) {
					case "function":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "content":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "NodeList", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "jQuery object":
						$r = [haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []})];
						break;
					case "complete":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callback()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "alwaysCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerIn(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerInOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, text)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, html)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, oldhtml)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, class)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, currentClass)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(options, originalOptions, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "success(data, textStatus, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "complete(responseText, textStatus, XMLHttpRequest)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(event, XMLHttpRequest, ajaxOptions)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					default:
						$r = (function($this) {
							var $r;
							haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
							$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
							return $r;
						}($this));
					}
					return $r;
				}($this));
				break;
			case "css":
				$r = (function($this) {
					var $r;
					switch(tagName) {
					case "propertyNames":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "content":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "NodeList", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "jQuery object":
						$r = [haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []})];
						break;
					case "complete":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callback()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "alwaysCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerIn(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerInOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, text)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, html)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, oldhtml)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, class)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, currentClass)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, value)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(options, originalOptions, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "success(data, textStatus, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "complete(responseText, textStatus, XMLHttpRequest)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(event, XMLHttpRequest, ajaxOptions)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					default:
						$r = (function($this) {
							var $r;
							haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
							$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
							return $r;
						}($this));
					}
					return $r;
				}($this));
				break;
			case "jQuery.queue":
				$r = (function($this) {
					var $r;
					switch(tagName) {
					case "jQuery.queue":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "newQueue":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "content":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "NodeList", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "jQuery object":
						$r = [haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []})];
						break;
					case "complete":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callback()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "alwaysCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerIn(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerInOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, text)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, html)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, oldhtml)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, class)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, currentClass)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(options, originalOptions, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "success(data, textStatus, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "complete(responseText, textStatus, XMLHttpRequest)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(event, XMLHttpRequest, ajaxOptions)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					default:
						$r = (function($this) {
							var $r;
							haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
							$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
							return $r;
						}($this));
					}
					return $r;
				}($this));
				break;
			case "queue":
				$r = (function($this) {
					var $r;
					switch(tagName) {
					case "queue":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "newQueue":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callback( next )":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TParent(haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})))],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "content":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "NodeList", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "jQuery object":
						$r = [haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []})];
						break;
					case "complete":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callback()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "alwaysCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerIn(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerInOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, text)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, html)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, oldhtml)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, class)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, currentClass)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(options, originalOptions, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "success(data, textStatus, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "complete(responseText, textStatus, XMLHttpRequest)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(event, XMLHttpRequest, ajaxOptions)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					default:
						$r = (function($this) {
							var $r;
							haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
							$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
							return $r;
						}($this));
					}
					return $r;
				}($this));
				break;
			case "jQuery.proxy":
				$r = (function($this) {
					var $r;
					switch(type) {
					case "Function":
						$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
						break;
					case "Array":
						$r = (function($this) {
							var $r;
							switch(tagName) {
							case "callbacks":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							case "content":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "NodeList", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []}))]})];
								break;
							case "jQuery object":
								$r = [haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					default:
						$r = (function($this) {
							var $r;
							switch(tagName) {
							case "jQuery object":
								$r = [haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
					}
					return $r;
				}($this));
				break;
			case "each":
				$r = (function($this) {
					var $r;
					switch(tagName) {
					case "function(index, Element)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "content":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "NodeList", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "jQuery object":
						$r = [haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []})];
						break;
					case "complete":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callback()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "alwaysCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerIn(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerInOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, text)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, html)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, oldhtml)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, class)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, currentClass)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(options, originalOptions, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "success(data, textStatus, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "complete(responseText, textStatus, XMLHttpRequest)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(event, XMLHttpRequest, ajaxOptions)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					default:
						$r = (function($this) {
							var $r;
							haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
							$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
							return $r;
						}($this));
					}
					return $r;
				}($this));
				break;
			case "ajaxSend":
				$r = (function($this) {
					var $r;
					switch(tagName) {
					case "handler(event, jqXHR, ajaxOptions)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "content":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "NodeList", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "jQuery object":
						$r = [haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []})];
						break;
					case "complete":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callback()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "alwaysCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerIn(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerInOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, text)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, html)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, oldhtml)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, class)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, currentClass)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(options, originalOptions, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "success(data, textStatus, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "complete(responseText, textStatus, XMLHttpRequest)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(event, XMLHttpRequest, ajaxOptions)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					default:
						$r = (function($this) {
							var $r;
							haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
							$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
							return $r;
						}($this));
					}
					return $r;
				}($this));
				break;
			case "ajaxError":
				$r = (function($this) {
					var $r;
					switch(tagName) {
					case "handler(event, jqXHR, ajaxSettings, thrownError)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "content":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "NodeList", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "jQuery object":
						$r = [haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []})];
						break;
					case "complete":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callback()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "alwaysCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerIn(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerInOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, text)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, html)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, oldhtml)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, class)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, currentClass)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(options, originalOptions, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "success(data, textStatus, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "complete(responseText, textStatus, XMLHttpRequest)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(event, XMLHttpRequest, ajaxOptions)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					default:
						$r = (function($this) {
							var $r;
							haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
							$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
							return $r;
						}($this));
					}
					return $r;
				}($this));
				break;
			case "jQuery.Deferred":
				$r = (function($this) {
					var $r;
					switch(tagName) {
					case "beforeStart":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Deferred", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "content":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "NodeList", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "jQuery object":
						$r = [haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []})];
						break;
					case "complete":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callback()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "alwaysCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerIn(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerInOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, text)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, html)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, oldhtml)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, class)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, currentClass)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(options, originalOptions, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "success(data, textStatus, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "complete(responseText, textStatus, XMLHttpRequest)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(event, XMLHttpRequest, ajaxOptions)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					default:
						$r = (function($this) {
							var $r;
							haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
							$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
							return $r;
						}($this));
					}
					return $r;
				}($this));
				break;
			case "serializeArray":
				$r = (function($this) {
					var $r;
					switch(tagName) {
					case "serializeArray":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "content":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "NodeList", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "jQuery object":
						$r = [haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []})];
						break;
					case "complete":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callback()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "alwaysCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerIn(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerInOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, text)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, html)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, oldhtml)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, class)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, currentClass)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(options, originalOptions, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "success(data, textStatus, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "complete(responseText, textStatus, XMLHttpRequest)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(event, XMLHttpRequest, ajaxOptions)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					default:
						$r = (function($this) {
							var $r;
							haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
							$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
							return $r;
						}($this));
					}
					return $r;
				}($this));
				break;
			case "triggerHandler":
				$r = (function($this) {
					var $r;
					switch(tagName) {
					case "extraParameters":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "content":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "NodeList", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "jQuery object":
						$r = [haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []})];
						break;
					case "complete":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callback()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "alwaysCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerIn(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerInOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, text)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, html)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, oldhtml)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, class)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, currentClass)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(options, originalOptions, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "success(data, textStatus, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "complete(responseText, textStatus, XMLHttpRequest)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(event, XMLHttpRequest, ajaxOptions)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					default:
						$r = (function($this) {
							var $r;
							haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
							$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
							return $r;
						}($this));
					}
					return $r;
				}($this));
				break;
			case "replaceWith":
				$r = (function($this) {
					var $r;
					switch(tagName) {
					case "function":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "content":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "NodeList", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "jQuery object":
						$r = [haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []})];
						break;
					case "complete":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callback()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "alwaysCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerIn(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerInOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, text)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, html)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, oldhtml)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, class)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, currentClass)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(options, originalOptions, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "success(data, textStatus, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "complete(responseText, textStatus, XMLHttpRequest)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(event, XMLHttpRequest, ajaxOptions)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					default:
						$r = (function($this) {
							var $r;
							haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
							$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
							return $r;
						}($this));
					}
					return $r;
				}($this));
				break;
			case "pushStack":
				$r = (function($this) {
					var $r;
					switch(tagName) {
					case "elements":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "NodeList", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "arguments":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "content":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "NodeList", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "jQuery object":
						$r = [haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []})];
						break;
					case "complete":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callback()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "alwaysCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerIn(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerInOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, text)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, html)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, oldhtml)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, class)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, currentClass)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(options, originalOptions, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "success(data, textStatus, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "complete(responseText, textStatus, XMLHttpRequest)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(event, XMLHttpRequest, ajaxOptions)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					default:
						$r = (function($this) {
							var $r;
							haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
							$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
							return $r;
						}($this));
					}
					return $r;
				}($this));
				break;
			case "not":
				$r = (function($this) {
					var $r;
					switch(tagName) {
					case "elements":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Elements":
								$r = [haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "NodeList", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "content":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "NodeList", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "jQuery object":
						$r = [haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []})];
						break;
					case "complete":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callback()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "alwaysCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerIn(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerInOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, text)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, html)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, oldhtml)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, class)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, currentClass)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(options, originalOptions, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "success(data, textStatus, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "complete(responseText, textStatus, XMLHttpRequest)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(event, XMLHttpRequest, ajaxOptions)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					default:
						$r = (function($this) {
							var $r;
							haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
							$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
							return $r;
						}($this));
					}
					return $r;
				}($this));
				break;
			case "map":
				$r = (function($this) {
					var $r;
					switch(tagName) {
					case "callback(index, domElement)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []})],haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "content":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "NodeList", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "jQuery object":
						$r = [haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []})];
						break;
					case "complete":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callback()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "alwaysCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerIn(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerInOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, text)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, html)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, oldhtml)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, class)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, currentClass)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(options, originalOptions, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "success(data, textStatus, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "complete(responseText, textStatus, XMLHttpRequest)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(event, XMLHttpRequest, ajaxOptions)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					default:
						$r = (function($this) {
							var $r;
							haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
							$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
							return $r;
						}($this));
					}
					return $r;
				}($this));
				break;
			case "prop":
				$r = (function($this) {
					var $r;
					switch(tagName) {
					case "function(index, oldPropertyValue)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})),haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []})),haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Bool", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Bool", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "content":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "NodeList", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "jQuery object":
						$r = [haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []})];
						break;
					case "complete":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callback()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "alwaysCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerIn(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerInOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, text)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, html)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, oldhtml)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, class)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, currentClass)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(options, originalOptions, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "success(data, textStatus, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "complete(responseText, textStatus, XMLHttpRequest)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(event, XMLHttpRequest, ajaxOptions)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					default:
						$r = (function($this) {
							var $r;
							haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
							$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
							return $r;
						}($this));
					}
					return $r;
				}($this));
				break;
			case "val":
				$r = (function($this) {
					var $r;
					switch(tagName) {
					case "value":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "val":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, value)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "content":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "NodeList", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "jQuery object":
						$r = [haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []})];
						break;
					case "complete":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callback()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "alwaysCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerIn(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerInOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, text)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, html)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, oldhtml)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, class)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, currentClass)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(options, originalOptions, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "success(data, textStatus, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "complete(responseText, textStatus, XMLHttpRequest)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(event, XMLHttpRequest, ajaxOptions)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					default:
						$r = (function($this) {
							var $r;
							haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
							$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
							return $r;
						}($this));
					}
					return $r;
				}($this));
				break;
			case "closest":
				$r = (function($this) {
					var $r;
					switch(tagName) {
					case "selectors":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "closest":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "content":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "NodeList", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "jQuery object":
						$r = [haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []})];
						break;
					case "complete":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callback()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "alwaysCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerIn(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerInOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, text)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, html)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, oldhtml)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, class)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, currentClass)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(options, originalOptions, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "success(data, textStatus, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "complete(responseText, textStatus, XMLHttpRequest)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(event, XMLHttpRequest, ajaxOptions)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					default:
						$r = (function($this) {
							var $r;
							haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
							$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
							return $r;
						}($this));
					}
					return $r;
				}($this));
				break;
			case "jQuery":
				$r = (function($this) {
					var $r;
					switch(tagName) {
					case "elementArray":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "NodeList", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callback":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})),haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Class", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []}))]})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "content":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "NodeList", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "jQuery object":
						$r = [haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []})];
						break;
					case "complete":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callback()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "alwaysCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerIn(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerInOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, text)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, html)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, oldhtml)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, class)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, currentClass)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(options, originalOptions, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "success(data, textStatus, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "complete(responseText, textStatus, XMLHttpRequest)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(event, XMLHttpRequest, ajaxOptions)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					default:
						$r = (function($this) {
							var $r;
							haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
							$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
							return $r;
						}($this));
					}
					return $r;
				}($this));
				break;
			case "toArray":
				$r = (function($this) {
					var $r;
					switch(tagName) {
					case "toArray":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "content":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "NodeList", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "jQuery object":
						$r = [haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []})];
						break;
					case "complete":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callback()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "alwaysCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerIn(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerInOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, text)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, html)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, oldhtml)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, class)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, currentClass)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(options, originalOptions, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "success(data, textStatus, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "complete(responseText, textStatus, XMLHttpRequest)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(event, XMLHttpRequest, ajaxOptions)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					default:
						$r = (function($this) {
							var $r;
							haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
							$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
							return $r;
						}($this));
					}
					return $r;
				}($this));
				break;
			case "toggleClass":
				$r = (function($this) {
					var $r;
					switch(tagName) {
					case "function(index, class, switch)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Bool", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "content":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "NodeList", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "jQuery object":
						$r = [haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []})];
						break;
					case "complete":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callback()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "alwaysCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerIn(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerInOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, text)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, html)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, oldhtml)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, class)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, currentClass)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(options, originalOptions, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "success(data, textStatus, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "complete(responseText, textStatus, XMLHttpRequest)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(event, XMLHttpRequest, ajaxOptions)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					default:
						$r = (function($this) {
							var $r;
							haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
							$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
							return $r;
						}($this));
					}
					return $r;
				}($this));
				break;
			case "trigger":
				$r = (function($this) {
					var $r;
					switch(tagName) {
					case "extraParameters":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "content":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "NodeList", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "jQuery object":
						$r = [haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []})];
						break;
					case "complete":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callback()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "alwaysCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerIn(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerInOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, text)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, html)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, oldhtml)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, class)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, currentClass)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(options, originalOptions, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "success(data, textStatus, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "complete(responseText, textStatus, XMLHttpRequest)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(event, XMLHttpRequest, ajaxOptions)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					default:
						$r = (function($this) {
							var $r;
							haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
							$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
							return $r;
						}($this));
					}
					return $r;
				}($this));
				break;
			case "removeData":
				$r = (function($this) {
					var $r;
					switch(tagName) {
					case "list":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "content":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "NodeList", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "jQuery object":
						$r = [haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []})];
						break;
					case "complete":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callback()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "alwaysCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerIn(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerInOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, text)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, html)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, oldhtml)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, class)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, currentClass)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(options, originalOptions, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "success(data, textStatus, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "complete(responseText, textStatus, XMLHttpRequest)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(event, XMLHttpRequest, ajaxOptions)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					default:
						$r = (function($this) {
							var $r;
							haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
							$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
							return $r;
						}($this));
					}
					return $r;
				}($this));
				break;
			case "jQuery.param":
				$r = (function($this) {
					var $r;
					switch(tagName) {
					case "obj":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "content":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "NodeList", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "jQuery object":
						$r = [haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []})];
						break;
					case "complete":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callback()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "alwaysCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerIn(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerInOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, text)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, html)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, oldhtml)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, class)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, currentClass)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(options, originalOptions, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "success(data, textStatus, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "complete(responseText, textStatus, XMLHttpRequest)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(event, XMLHttpRequest, ajaxOptions)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					default:
						$r = (function($this) {
							var $r;
							haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
							$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
							return $r;
						}($this));
					}
					return $r;
				}($this));
				break;
			case "offset":
				$r = (function($this) {
					var $r;
					switch(tagName) {
					case "callbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							case "Object":case "PlainObject":
								$r = [haxe.macro.ComplexType.TAnonymous([{ name : "top", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5927, max : 5937}},{ name : "left", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5938, max : 5949}}])];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "content":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "NodeList", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []}))]})];
								break;
							case "Object":case "PlainObject":
								$r = [haxe.macro.ComplexType.TAnonymous([{ name : "top", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5927, max : 5937}},{ name : "left", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5938, max : 5949}}])];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "jQuery object":
						$r = [haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []})];
						break;
					case "function(index, coords)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Object":case "PlainObject":
								$r = [haxe.macro.ComplexType.TAnonymous([{ name : "top", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5927, max : 5937}},{ name : "left", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5938, max : 5949}}])];
								break;
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TAnonymous([{ name : "left", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 6032, max : 6043}},{ name : "top", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 6044, max : 6054}}])],haxe.macro.ComplexType.TAnonymous([{ name : "left", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 6057, max : 6068}},{ name : "top", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 6069, max : 6079}}]))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "complete":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Object":case "PlainObject":
								$r = [haxe.macro.ComplexType.TAnonymous([{ name : "top", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5927, max : 5937}},{ name : "left", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5938, max : 5949}}])];
								break;
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callback()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Object":case "PlainObject":
								$r = [haxe.macro.ComplexType.TAnonymous([{ name : "top", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5927, max : 5937}},{ name : "left", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5938, max : 5949}}])];
								break;
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Object":case "PlainObject":
								$r = [haxe.macro.ComplexType.TAnonymous([{ name : "top", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5927, max : 5937}},{ name : "left", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5938, max : 5949}}])];
								break;
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Object":case "PlainObject":
								$r = [haxe.macro.ComplexType.TAnonymous([{ name : "top", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5927, max : 5937}},{ name : "left", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5938, max : 5949}}])];
								break;
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Object":case "PlainObject":
								$r = [haxe.macro.ComplexType.TAnonymous([{ name : "top", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5927, max : 5937}},{ name : "left", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5938, max : 5949}}])];
								break;
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Object":case "PlainObject":
								$r = [haxe.macro.ComplexType.TAnonymous([{ name : "top", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5927, max : 5937}},{ name : "left", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5938, max : 5949}}])];
								break;
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Object":case "PlainObject":
								$r = [haxe.macro.ComplexType.TAnonymous([{ name : "top", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5927, max : 5937}},{ name : "left", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5938, max : 5949}}])];
								break;
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "alwaysCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Object":case "PlainObject":
								$r = [haxe.macro.ComplexType.TAnonymous([{ name : "top", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5927, max : 5937}},{ name : "left", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5938, max : 5949}}])];
								break;
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Object":case "PlainObject":
								$r = [haxe.macro.ComplexType.TAnonymous([{ name : "top", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5927, max : 5937}},{ name : "left", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5938, max : 5949}}])];
								break;
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Object":case "PlainObject":
								$r = [haxe.macro.ComplexType.TAnonymous([{ name : "top", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5927, max : 5937}},{ name : "left", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5938, max : 5949}}])];
								break;
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Object":case "PlainObject":
								$r = [haxe.macro.ComplexType.TAnonymous([{ name : "top", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5927, max : 5937}},{ name : "left", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5938, max : 5949}}])];
								break;
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Object":case "PlainObject":
								$r = [haxe.macro.ComplexType.TAnonymous([{ name : "top", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5927, max : 5937}},{ name : "left", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5938, max : 5949}}])];
								break;
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerIn(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Object":case "PlainObject":
								$r = [haxe.macro.ComplexType.TAnonymous([{ name : "top", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5927, max : 5937}},{ name : "left", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5938, max : 5949}}])];
								break;
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Object":case "PlainObject":
								$r = [haxe.macro.ComplexType.TAnonymous([{ name : "top", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5927, max : 5937}},{ name : "left", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5938, max : 5949}}])];
								break;
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerInOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Object":case "PlainObject":
								$r = [haxe.macro.ComplexType.TAnonymous([{ name : "top", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5927, max : 5937}},{ name : "left", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5938, max : 5949}}])];
								break;
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Object":case "PlainObject":
								$r = [haxe.macro.ComplexType.TAnonymous([{ name : "top", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5927, max : 5937}},{ name : "left", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5938, max : 5949}}])];
								break;
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, text)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Object":case "PlainObject":
								$r = [haxe.macro.ComplexType.TAnonymous([{ name : "top", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5927, max : 5937}},{ name : "left", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5938, max : 5949}}])];
								break;
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, html)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Object":case "PlainObject":
								$r = [haxe.macro.ComplexType.TAnonymous([{ name : "top", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5927, max : 5937}},{ name : "left", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5938, max : 5949}}])];
								break;
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, oldhtml)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Object":case "PlainObject":
								$r = [haxe.macro.ComplexType.TAnonymous([{ name : "top", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5927, max : 5937}},{ name : "left", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5938, max : 5949}}])];
								break;
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, class)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Object":case "PlainObject":
								$r = [haxe.macro.ComplexType.TAnonymous([{ name : "top", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5927, max : 5937}},{ name : "left", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5938, max : 5949}}])];
								break;
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, currentClass)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Object":case "PlainObject":
								$r = [haxe.macro.ComplexType.TAnonymous([{ name : "top", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5927, max : 5937}},{ name : "left", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5938, max : 5949}}])];
								break;
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(options, originalOptions, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Object":case "PlainObject":
								$r = [haxe.macro.ComplexType.TAnonymous([{ name : "top", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5927, max : 5937}},{ name : "left", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5938, max : 5949}}])];
								break;
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "success(data, textStatus, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Object":case "PlainObject":
								$r = [haxe.macro.ComplexType.TAnonymous([{ name : "top", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5927, max : 5937}},{ name : "left", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5938, max : 5949}}])];
								break;
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "complete(responseText, textStatus, XMLHttpRequest)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Object":case "PlainObject":
								$r = [haxe.macro.ComplexType.TAnonymous([{ name : "top", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5927, max : 5937}},{ name : "left", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5938, max : 5949}}])];
								break;
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(event, XMLHttpRequest, ajaxOptions)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Object":case "PlainObject":
								$r = [haxe.macro.ComplexType.TAnonymous([{ name : "top", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5927, max : 5937}},{ name : "left", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5938, max : 5949}}])];
								break;
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					default:
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Object":case "PlainObject":
								$r = [haxe.macro.ComplexType.TAnonymous([{ name : "top", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5927, max : 5937}},{ name : "left", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5938, max : 5949}}])];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
					}
					return $r;
				}($this));
				break;
			case "position":
				$r = (function($this) {
					var $r;
					switch(tagName) {
					case "callbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							case "Object":case "PlainObject":
								$r = [haxe.macro.ComplexType.TAnonymous([{ name : "top", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5927, max : 5937}},{ name : "left", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5938, max : 5949}}])];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "content":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "NodeList", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []}))]})];
								break;
							case "Object":case "PlainObject":
								$r = [haxe.macro.ComplexType.TAnonymous([{ name : "top", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5927, max : 5937}},{ name : "left", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5938, max : 5949}}])];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "jQuery object":
						$r = [haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []})];
						break;
					case "complete":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Object":case "PlainObject":
								$r = [haxe.macro.ComplexType.TAnonymous([{ name : "top", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5927, max : 5937}},{ name : "left", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5938, max : 5949}}])];
								break;
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callback()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Object":case "PlainObject":
								$r = [haxe.macro.ComplexType.TAnonymous([{ name : "top", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5927, max : 5937}},{ name : "left", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5938, max : 5949}}])];
								break;
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Object":case "PlainObject":
								$r = [haxe.macro.ComplexType.TAnonymous([{ name : "top", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5927, max : 5937}},{ name : "left", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5938, max : 5949}}])];
								break;
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Object":case "PlainObject":
								$r = [haxe.macro.ComplexType.TAnonymous([{ name : "top", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5927, max : 5937}},{ name : "left", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5938, max : 5949}}])];
								break;
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Object":case "PlainObject":
								$r = [haxe.macro.ComplexType.TAnonymous([{ name : "top", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5927, max : 5937}},{ name : "left", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5938, max : 5949}}])];
								break;
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Object":case "PlainObject":
								$r = [haxe.macro.ComplexType.TAnonymous([{ name : "top", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5927, max : 5937}},{ name : "left", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5938, max : 5949}}])];
								break;
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Object":case "PlainObject":
								$r = [haxe.macro.ComplexType.TAnonymous([{ name : "top", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5927, max : 5937}},{ name : "left", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5938, max : 5949}}])];
								break;
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "alwaysCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Object":case "PlainObject":
								$r = [haxe.macro.ComplexType.TAnonymous([{ name : "top", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5927, max : 5937}},{ name : "left", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5938, max : 5949}}])];
								break;
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Object":case "PlainObject":
								$r = [haxe.macro.ComplexType.TAnonymous([{ name : "top", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5927, max : 5937}},{ name : "left", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5938, max : 5949}}])];
								break;
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Object":case "PlainObject":
								$r = [haxe.macro.ComplexType.TAnonymous([{ name : "top", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5927, max : 5937}},{ name : "left", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5938, max : 5949}}])];
								break;
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Object":case "PlainObject":
								$r = [haxe.macro.ComplexType.TAnonymous([{ name : "top", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5927, max : 5937}},{ name : "left", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5938, max : 5949}}])];
								break;
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Object":case "PlainObject":
								$r = [haxe.macro.ComplexType.TAnonymous([{ name : "top", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5927, max : 5937}},{ name : "left", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5938, max : 5949}}])];
								break;
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerIn(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Object":case "PlainObject":
								$r = [haxe.macro.ComplexType.TAnonymous([{ name : "top", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5927, max : 5937}},{ name : "left", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5938, max : 5949}}])];
								break;
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Object":case "PlainObject":
								$r = [haxe.macro.ComplexType.TAnonymous([{ name : "top", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5927, max : 5937}},{ name : "left", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5938, max : 5949}}])];
								break;
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerInOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Object":case "PlainObject":
								$r = [haxe.macro.ComplexType.TAnonymous([{ name : "top", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5927, max : 5937}},{ name : "left", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5938, max : 5949}}])];
								break;
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Object":case "PlainObject":
								$r = [haxe.macro.ComplexType.TAnonymous([{ name : "top", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5927, max : 5937}},{ name : "left", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5938, max : 5949}}])];
								break;
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, text)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Object":case "PlainObject":
								$r = [haxe.macro.ComplexType.TAnonymous([{ name : "top", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5927, max : 5937}},{ name : "left", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5938, max : 5949}}])];
								break;
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, html)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Object":case "PlainObject":
								$r = [haxe.macro.ComplexType.TAnonymous([{ name : "top", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5927, max : 5937}},{ name : "left", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5938, max : 5949}}])];
								break;
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, oldhtml)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Object":case "PlainObject":
								$r = [haxe.macro.ComplexType.TAnonymous([{ name : "top", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5927, max : 5937}},{ name : "left", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5938, max : 5949}}])];
								break;
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, class)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Object":case "PlainObject":
								$r = [haxe.macro.ComplexType.TAnonymous([{ name : "top", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5927, max : 5937}},{ name : "left", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5938, max : 5949}}])];
								break;
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, currentClass)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Object":case "PlainObject":
								$r = [haxe.macro.ComplexType.TAnonymous([{ name : "top", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5927, max : 5937}},{ name : "left", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5938, max : 5949}}])];
								break;
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(options, originalOptions, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Object":case "PlainObject":
								$r = [haxe.macro.ComplexType.TAnonymous([{ name : "top", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5927, max : 5937}},{ name : "left", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5938, max : 5949}}])];
								break;
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "success(data, textStatus, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Object":case "PlainObject":
								$r = [haxe.macro.ComplexType.TAnonymous([{ name : "top", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5927, max : 5937}},{ name : "left", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5938, max : 5949}}])];
								break;
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "complete(responseText, textStatus, XMLHttpRequest)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Object":case "PlainObject":
								$r = [haxe.macro.ComplexType.TAnonymous([{ name : "top", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5927, max : 5937}},{ name : "left", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5938, max : 5949}}])];
								break;
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(event, XMLHttpRequest, ajaxOptions)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Object":case "PlainObject":
								$r = [haxe.macro.ComplexType.TAnonymous([{ name : "top", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5927, max : 5937}},{ name : "left", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5938, max : 5949}}])];
								break;
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					default:
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Object":case "PlainObject":
								$r = [haxe.macro.ComplexType.TAnonymous([{ name : "top", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5927, max : 5937}},{ name : "left", kind : haxe.macro.FieldType.FVar(haxe.macro.ComplexType.TPath({ pack : [], name : "Float", params : []}),null), pos : { file : "jQuery/haxe/gen/CoreExternGenerator.hx", min : 5938, max : 5949}}])];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
					}
					return $r;
				}($this));
				break;
			case "deferred.resolveWith":
				$r = (function($this) {
					var $r;
					switch(tagName) {
					case "callbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "content":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "NodeList", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "jQuery object":
						$r = [haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []})];
						break;
					case "complete":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callback()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "alwaysCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "args":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerIn(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerInOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, text)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, html)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, oldhtml)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, class)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, currentClass)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(options, originalOptions, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "success(data, textStatus, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "complete(responseText, textStatus, XMLHttpRequest)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(event, XMLHttpRequest, ajaxOptions)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					default:
						$r = (function($this) {
							var $r;
							haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
							$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
							return $r;
						}($this));
					}
					return $r;
				}($this));
				break;
			case "deferred.rejectWith":
				$r = (function($this) {
					var $r;
					switch(tagName) {
					case "callbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "content":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "NodeList", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "jQuery object":
						$r = [haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []})];
						break;
					case "complete":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callback()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "alwaysCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "args":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerIn(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerInOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, text)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, html)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, oldhtml)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, class)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, currentClass)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(options, originalOptions, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "success(data, textStatus, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "complete(responseText, textStatus, XMLHttpRequest)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(event, XMLHttpRequest, ajaxOptions)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					default:
						$r = (function($this) {
							var $r;
							haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
							$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
							return $r;
						}($this));
					}
					return $r;
				}($this));
				break;
			case "callbacks.has":
				$r = (function($this) {
					var $r;
					switch(tagName) {
					case "callbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "content":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "NodeList", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "jQuery object":
						$r = [haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []})];
						break;
					case "complete":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callback()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "alwaysCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerIn(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerInOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, text)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, html)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, oldhtml)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, class)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, currentClass)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callback":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(options, originalOptions, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "success(data, textStatus, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "complete(responseText, textStatus, XMLHttpRequest)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(event, XMLHttpRequest, ajaxOptions)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					default:
						$r = (function($this) {
							var $r;
							haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
							$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
							return $r;
						}($this));
					}
					return $r;
				}($this));
				break;
			case "jQuery.unique":
				$r = (function($this) {
					var $r;
					switch(tagName) {
					case "callbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "content":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "NodeList", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "jQuery object":
						$r = [haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []})];
						break;
					case "complete":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callback()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "alwaysCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerIn(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerInOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, text)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, html)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, oldhtml)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, class)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, currentClass)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(options, originalOptions, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]})];
								break;
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "success(data, textStatus, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]})];
								break;
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "complete(responseText, textStatus, XMLHttpRequest)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]})];
								break;
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(event, XMLHttpRequest, ajaxOptions)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]})];
								break;
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					default:
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
					}
					return $r;
				}($this));
				break;
			case "height":
				$r = (function($this) {
					var $r;
					switch(tagName) {
					case "callbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "content":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "NodeList", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "jQuery object":
						$r = [haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []})];
						break;
					case "complete":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callback()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "alwaysCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerIn(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerInOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, text)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, html)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, oldhtml)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, class)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, currentClass)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, height)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(options, originalOptions, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "success(data, textStatus, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "complete(responseText, textStatus, XMLHttpRequest)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(event, XMLHttpRequest, ajaxOptions)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					default:
						$r = (function($this) {
							var $r;
							haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
							$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
							return $r;
						}($this));
					}
					return $r;
				}($this));
				break;
			case "width":
				$r = (function($this) {
					var $r;
					switch(tagName) {
					case "callbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "content":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "NodeList", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "jQuery object":
						$r = [haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []})];
						break;
					case "complete":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callback()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "alwaysCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerIn(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerInOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, text)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, html)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, oldhtml)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, class)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, currentClass)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, width)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(options, originalOptions, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "success(data, textStatus, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "complete(responseText, textStatus, XMLHttpRequest)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(event, XMLHttpRequest, ajaxOptions)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					default:
						$r = (function($this) {
							var $r;
							haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
							$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
							return $r;
						}($this));
					}
					return $r;
				}($this));
				break;
			default:
				$r = (function($this) {
					var $r;
					switch(tagName) {
					case "callbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "content":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Array":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "Node", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "NodeList", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}))]}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "jQuery object":
						$r = [haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JQuery", params : []})];
						break;
					case "complete":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "callback()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler()":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "alwaysCallbacks":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}))]})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "doneFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "failFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "progressFilter":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerIn(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handlerInOut(eventObject)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, text)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, html)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, oldhtml)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, class)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "function(index, currentClass)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Int", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(options, originalOptions, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "success(data, textStatus, jqXHR)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "JqXHR", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "complete(responseText, textStatus, XMLHttpRequest)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "String", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					case "handler(event, XMLHttpRequest, ajaxOptions)":
						$r = (function($this) {
							var $r;
							switch(type) {
							case "Function":
								$r = [haxe.macro.ComplexType.TFunction([haxe.macro.ComplexType.TPath({ pack : ["jQuery"], name : "Event", params : []}),haxe.macro.ComplexType.TPath({ pack : ["js","html"], name : "XMLHttpRequest", params : []}),haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})],haxe.macro.ComplexType.TPath({ pack : [], name : "Void", params : []}))];
								break;
							default:
								$r = (function($this) {
									var $r;
									haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
									$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
									return $r;
								}($this));
							}
							return $r;
						}($this));
						break;
					default:
						$r = (function($this) {
							var $r;
							haxe.Log.trace("[\"" + entryName + "\", \"" + tagName + "\", \"" + type + "\"]",{ fileName : "CoreExternGenerator.hx", lineNumber : 239, className : "jQuery.haxe.gen.CoreExternGenerator", methodName : "toComplexType"});
							$r = [haxe.macro.ComplexType.TPath({ pack : [], name : "Dynamic", params : []})];
							return $r;
						}($this));
					}
					return $r;
				}($this));
			}
			return $r;
		}(this));
	}
	,api: null
	,__class__: CoreExternGenerator
}
var js = {}
js.Boot = function() { }
js.Boot.__name__ = ["js","Boot"];
js.Boot.__unhtml = function(s) {
	return s.split("&").join("&amp;").split("<").join("&lt;").split(">").join("&gt;");
}
js.Boot.__trace = function(v,i) {
	var msg = i != null?i.fileName + ":" + i.lineNumber + ": ":"";
	msg += js.Boot.__string_rec(v,"");
	var d;
	if(typeof(document) != "undefined" && (d = document.getElementById("haxe:trace")) != null) d.innerHTML += js.Boot.__unhtml(msg) + "<br/>"; else if(typeof(console) != "undefined" && console.log != null) console.log(msg);
}
js.Boot.__string_rec = function(o,s) {
	if(o == null) return "null";
	if(s.length >= 5) return "<...>";
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) t = "object";
	switch(t) {
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) return o[0];
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2, _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) str += "," + js.Boot.__string_rec(o[i],s); else str += js.Boot.__string_rec(o[i],s);
				}
				return str + ")";
			}
			var l = o.length;
			var i;
			var str = "[";
			s += "\t";
			var _g = 0;
			while(_g < l) {
				var i1 = _g++;
				str += (i1 > 0?",":"") + js.Boot.__string_rec(o[i1],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString) {
			var s2 = o.toString();
			if(s2 != "[object Object]") return s2;
		}
		var k = null;
		var str = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) { ;
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str.length != 2) str += ", \n";
		str += s + k + " : " + js.Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str += "\n" + s + "}";
		return str;
	case "function":
		return "<function>";
	case "string":
		return o;
	default:
		return String(o);
	}
}
js.Boot.__interfLoop = function(cc,cl) {
	if(cc == null) return false;
	if(cc == cl) return true;
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0, _g = intf.length;
		while(_g1 < _g) {
			var i = _g1++;
			var i1 = intf[i];
			if(i1 == cl || js.Boot.__interfLoop(i1,cl)) return true;
		}
	}
	return js.Boot.__interfLoop(cc.__super__,cl);
}
js.Boot.__instanceof = function(o,cl) {
	try {
		if(o instanceof cl) {
			if(cl == Array) return o.__enum__ == null;
			return true;
		}
		if(js.Boot.__interfLoop(o.__class__,cl)) return true;
	} catch( e ) {
		if(cl == null) return false;
	}
	switch(cl) {
	case Int:
		return Math.ceil(o%2147483648.0) === o;
	case Float:
		return typeof(o) == "number";
	case Bool:
		return o === true || o === false;
	case String:
		return typeof(o) == "string";
	case Dynamic:
		return true;
	default:
		if(o == null) return false;
		if(cl == Class && o.__name__ != null) return true; else null;
		if(cl == Enum && o.__ename__ != null) return true; else null;
		return o.__enum__ == cl;
	}
}
js.phantomjs = {}
js.phantomjs.PhantomTools = function() { }
js.phantomjs.PhantomTools.__name__ = ["js","phantomjs","PhantomTools"];
js.phantomjs.PhantomTools.injectThis = function(page) {
	return page.injectJs(require('system').args[0]);
}
js.phantomjs.PhantomTools.inPhantom = function() {
	return window.hasOwnProperty("phantom");
}
function $iterator(o) { if( o instanceof Array ) return function() { return HxOverrides.iter(o); }; return typeof(o.iterator) == 'function' ? $bind(o,o.iterator) : o.iterator; };
var $_;
function $bind(o,m) { var f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; return f; };
if(Array.prototype.indexOf) HxOverrides.remove = function(a,o) {
	var i = a.indexOf(o);
	if(i == -1) return false;
	a.splice(i,1);
	return true;
}; else null;
String.prototype.__class__ = String;
String.__name__ = ["String"];
Array.prototype.__class__ = Array;
Array.__name__ = ["Array"];
var Int = { __name__ : ["Int"]};
var Dynamic = { __name__ : ["Dynamic"]};
var Float = Number;
Float.__name__ = ["Float"];
var Bool = Boolean;
Bool.__ename__ = ["Bool"];
var Class = { __name__ : ["Class"]};
var Enum = { };
Xml.Element = "element";
Xml.PCData = "pcdata";
Xml.CData = "cdata";
Xml.Comment = "comment";
Xml.DocType = "doctype";
Xml.ProcessingInstruction = "processingInstruction";
Xml.Document = "document";
CoreExternGenerator.keywords = ["function","true","false","if","else","switch","class","interface"];
Test.main();
function $hxExpose(src, path) {
	var o = typeof window != "undefined" ? window : exports;
	var parts = path.split(".");
	for(var ii = 0; ii < parts.length-1; ++ii) {
		var p = parts[ii];
		if(typeof o[p] == "undefined") o[p] = {};
		o = o[p];
	}
	o[parts[parts.length-1]] = src;
}
})();
